{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/admin/actions.ts"],"sourcesContent":["\n\"use server\";\n\nimport { generateQuote, type GenerateQuoteInput, type GenerateQuoteOutput } from \"@/ai/flows/generate-quote\";\nimport type { ClientInquiryStatus, ClientInquiry, Service, Testimonial, Project } from \"@/lib/placeholder-data\";\nimport type { ServiceFormValues, TestimonialFormValues, QuoteRequestFormValues, ProjectFormValues } from \"@/lib/schemas\";\nimport { revalidatePath } from \"next/cache\";\nimport { redirect } from \"next/navigation\";\nimport { db } from \"@/lib/firebase/config\";\nimport { ref, set, get, child, update, remove, push } from \"firebase/database\";\n\ninterface GenerateQuoteActionInputForServer extends GenerateQuoteInput {\n  inquiryId: string;\n}\n\n// AI Quote Generation\nexport async function generateQuoteAction(input: GenerateQuoteActionInputForServer): Promise<GenerateQuoteOutput> {\n  console.log(\"Server action: generateQuoteAction called with input for Firebase:\", input);\n  try {\n    const result = await generateQuote({ requestDetails: input.requestDetails });\n    \n    const inquiryRef = ref(db, `inquiries/${input.inquiryId}`);\n    await update(inquiryRef, {\n      generatedQuote: result,\n      status: 'Quoted' // Automatically mark as Quoted\n    });\n    console.log(`Generated bilingual quote added and status updated in Firebase for inquiry ID ${input.inquiryId}`);\n\n    revalidatePath(\"/admin/inquiries\");\n    revalidatePath(\"/admin\"); \n    return result;\n  } catch (error) {\n    console.error(\"Error in generateQuoteAction with Firebase:\", error);\n    if (error instanceof Error) {\n        throw new Error(`AI Quote Generation Failed: ${error.message}`);\n    }\n    throw new Error(\"An unexpected error occurred during AI quote generation.\");\n  }\n}\n\n// Service Actions\nexport async function createServiceAction(values: ServiceFormValues) {\n  try {\n    const newServiceRef = push(ref(db, 'services'));\n    const newServiceId = newServiceRef.key;\n    if (!newServiceId) throw new Error(\"Failed to generate service ID from Firebase.\");\n\n    const newService: Omit<Service, 'id'> = { // Firebase key will be the ID\n      ...values,\n      image: values.image || \"https://placehold.co/600x400.png\",\n    };\n    await set(ref(db, `services/${newServiceId}`), newService);\n    console.log(\"New service added to Firebase DB:\", newServiceId);\n    \n    revalidatePath(\"/admin/services\");\n    revalidatePath(\"/services\"); \n    revalidatePath(\"/\"); \n    revalidatePath(\"/admin\"); \n  } catch (error: any) {\n    console.error(\"Error creating service in Firebase:\", error);\n    if (typeof error.digest === 'string' && error.digest.startsWith('NEXT_REDIRECT')) throw error;\n    throw new Error(error.message || \"Failed to create service in Firebase.\");\n  }\n  redirect(\"/admin/services\");\n}\n\nexport async function updateServiceAction(id: string, values: ServiceFormValues) {\n  try {\n    const serviceToUpdate: Omit<Service, 'id'> = {\n      ...values,\n      image: values.image || \"https://placehold.co/600x400.png\",\n    };\n    await set(ref(db, `services/${id}`), serviceToUpdate);\n    console.log(`Service ${id} updated in Firebase DB.`);\n\n    revalidatePath(\"/admin/services\");\n    revalidatePath(`/admin/services/edit/${id}`);\n    revalidatePath(\"/services\"); \n    revalidatePath(\"/\"); \n    revalidatePath(\"/admin\");\n  } catch (error: any) {\n    console.error(`Error updating service ${id} in Firebase:`, error);\n    if (typeof error.digest === 'string' && error.digest.startsWith('NEXT_REDIRECT')) throw error;\n    throw new Error(error.message || `Failed to update service ${id} in Firebase.`);\n  }\n  redirect(\"/admin/services\");\n}\n\nexport async function deleteServiceAction(id: string) {\n  try {\n    await remove(ref(db, `services/${id}`));\n    console.log(`Service ${id} deleted from Firebase DB.`);\n    \n    revalidatePath(\"/admin/services\");\n    revalidatePath(\"/services\"); \n    revalidatePath(\"/\"); \n    revalidatePath(\"/admin\");\n  } catch (error) {\n    console.error(`Error deleting service ${id} from Firebase:`, error);\n    throw new Error(error instanceof Error ? error.message : `Failed to delete service ${id} from Firebase.`);\n  }\n}\n\n// Testimonial Actions\nexport async function createTestimonialAction(values: TestimonialFormValues) {\n  try {\n    const newTestimonialRef = push(ref(db, 'testimonials'));\n    const newTestimonialId = newTestimonialRef.key;\n    if (!newTestimonialId) throw new Error(\"Failed to generate testimonial ID from Firebase.\");\n\n    const newTestimonial: Omit<Testimonial, 'id'> = {\n      ...values,\n      avatar: values.avatar || \"https://placehold.co/100x100.png\",\n    };\n    await set(ref(db, `testimonials/${newTestimonialId}`), newTestimonial);\n    console.log(\"New testimonial added to Firebase DB:\", newTestimonialId);\n\n    revalidatePath(\"/admin/testimonials\");\n    revalidatePath(\"/\"); \n    revalidatePath(\"/admin\");\n  } catch (error: any) {\n    console.error(\"Error creating testimonial in Firebase:\", error);\n    if (typeof error.digest === 'string' && error.digest.startsWith('NEXT_REDIRECT')) throw error;\n    throw new Error(error.message || \"Failed to create testimonial in Firebase.\");\n  }\n  redirect(\"/admin/testimonials\");\n}\n\nexport async function updateTestimonialAction(id: string, values: TestimonialFormValues) {\n  try {\n    const testimonialToUpdate: Omit<Testimonial, 'id'> = {\n        ...values,\n        avatar: values.avatar || \"https://placehold.co/100x100.png\",\n    };\n    await set(ref(db, `testimonials/${id}`), testimonialToUpdate);\n    console.log(`Testimonial ${id} updated in Firebase DB.`);\n\n    revalidatePath(\"/admin/testimonials\");\n    revalidatePath(`/admin/testimonials/edit/${id}`);\n    revalidatePath(\"/\"); \n    revalidatePath(\"/admin\");\n  } catch (error: any) {\n    console.error(`Error updating testimonial ${id} in Firebase:`, error);\n    if (typeof error.digest === 'string' && error.digest.startsWith('NEXT_REDIRECT')) throw error;\n    throw new Error(error.message || `Failed to update testimonial ${id} in Firebase.`);\n  }\n  redirect(\"/admin/testimonials\");\n}\n\nexport async function deleteTestimonialAction(id: string) {\n  try {\n    await remove(ref(db, `testimonials/${id}`));\n    console.log(`Testimonial ${id} deleted from Firebase DB.`);\n    \n    revalidatePath(\"/admin/testimonials\");\n    revalidatePath(\"/\"); \n    revalidatePath(\"/admin\");\n  } catch (error) {\n     console.error(`Error deleting testimonial ${id} from Firebase:`, error);\n    throw new Error(error instanceof Error ? error.message : `Failed to delete testimonial ${id} from Firebase.`);\n  }\n}\n\n// Project Actions\nexport async function createProjectAction(values: ProjectFormValues) {\n  try {\n    const newProjectRef = push(ref(db, 'projects'));\n    const newProjectId = newProjectRef.key;\n    if (!newProjectId) throw new Error(\"Failed to generate project ID from Firebase.\");\n    \n    const newProject: Omit<Project, 'id'> = {\n      ...values,\n      technologies: values.technologies.split(',').map(tech => tech.trim()).filter(tech => tech.length > 0),\n      image: values.image || \"https://placehold.co/600x400.png\",\n    };\n    await set(ref(db, `projects/${newProjectId}`), newProject);\n    console.log(\"New project added to Firebase DB:\", newProjectId);\n    \n    revalidatePath(\"/admin/projects\");\n    revalidatePath(\"/projects\");\n    revalidatePath(\"/admin\"); \n  } catch (error: any) {\n    console.error(\"Error creating project in Firebase:\", error);\n    if (typeof error.digest === 'string' && error.digest.startsWith('NEXT_REDIRECT')) throw error;\n    throw new Error(error.message || \"Failed to create project in Firebase.\");\n  }\n  redirect(\"/admin/projects\");\n}\n\nexport async function updateProjectAction(id: string, values: ProjectFormValues) {\n  try {\n    const projectToUpdate: Omit<Project, 'id'> = {\n      ...values,\n      technologies: values.technologies.split(',').map(tech => tech.trim()).filter(tech => tech.length > 0),\n      image: values.image || \"https://placehold.co/600x400.png\",\n    };\n    await set(ref(db, `projects/${id}`), projectToUpdate);\n    console.log(`Project ${id} updated in Firebase DB.`);\n\n    revalidatePath(\"/admin/projects\");\n    revalidatePath(`/admin/projects/edit/${id}`);\n    revalidatePath(\"/projects\");\n    revalidatePath(\"/admin\");\n  } catch (error: any) {\n    console.error(`Error updating project ${id} in Firebase:`, error);\n    if (typeof error.digest === 'string' && error.digest.startsWith('NEXT_REDIRECT')) throw error;\n    throw new Error(error.message || `Failed to update project ${id} in Firebase.`);\n  }\n  redirect(\"/admin/projects\");\n}\n\nexport async function deleteProjectAction(id: string) {\n  try {\n    await remove(ref(db, `projects/${id}`));\n    console.log(`Project ${id} deleted from Firebase DB.`);\n    \n    revalidatePath(\"/admin/projects\");\n    revalidatePath(\"/projects\");\n    revalidatePath(\"/admin\");\n  } catch (error) {\n    console.error(`Error deleting project ${id} from Firebase:`, error);\n    throw new Error(error instanceof Error ? error.message : `Failed to delete project ${id} from Firebase.`);\n  }\n}\n\n// Inquiry Actions\nexport async function updateInquiryStatusAction(id: string, status: ClientInquiryStatus) {\n  try {\n    await update(ref(db, `inquiries/${id}`), { status: status });\n    console.log(`Inquiry ID ${id} status updated to ${status} in Firebase.`);\n    revalidatePath(\"/admin/inquiries\");\n    revalidatePath(\"/admin\"); \n  } catch (error) {\n    console.error(`Error updating inquiry status for ${id} in Firebase:`, error);\n     throw new Error(error instanceof Error ? error.message : `Failed to update inquiry ${id} in Firebase.`);\n  }\n}\n\nexport async function submitQuoteRequestAction(data: QuoteRequestFormValues): Promise<{ success: boolean; error?: string; newInquiryId?: string }> {\n  try {\n    const newInquiryRef = push(ref(db, 'inquiries'));\n    const newInquiryId = newInquiryRef.key;\n    if (!newInquiryId) throw new Error(\"Failed to generate inquiry ID from Firebase.\");\n\n    const newInquiryData: Omit<ClientInquiry, 'id'> = {\n      name: data.name,\n      email: data.email,\n      company: data.company || \"\",\n      phoneNumber: data.phoneNumber || \"\",\n      serviceRequested: data.service,\n      details: data.projectDetails,\n      date: new Date().toISOString(),\n      status: 'New',\n    };\n    \n    await set(ref(db, `inquiries/${newInquiryId}`), newInquiryData);\n    console.log(\"New inquiry added to Firebase DB:\", newInquiryId);\n\n    revalidatePath(\"/admin/inquiries\"); // For admin panel\n    revalidatePath(\"/admin\"); // For dashboard stats potentially\n    \n    return { success: true, newInquiryId: newInquiryId };\n  } catch (e) {\n    console.error(\"Error in submitQuoteRequestAction with Firebase:\", e);\n    const errorMessage = e instanceof Error ? e.message : \"An unexpected error occurred.\";\n    return { success: false, error: `Failed to submit quote request: ${errorMessage}` };\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;IAgBsB;IAyBA;IAyBA;IAsBA;IAgBA;IAwBA;IAqBA;IAeA;IAyBA;IAsBA;IAeA;IAYA","debugId":null}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/placeholder-data.ts"],"sourcesContent":["\nimport type { LucideIcon } from 'lucide-react';\nimport { Smartphone, Globe, Bot, BrainCircuit, Palette, Code2, PencilRuler, SearchCode, LineChart, HelpCircle, Briefcase, Layers } from 'lucide-react';\n\nexport interface BilingualContent {\n  en: string;\n  es: string;\n}\nexport interface AiGeneratedQuote {\n  projectScope: BilingualContent;\n  costEstimate: BilingualContent;\n  additionalNotes: BilingualContent;\n}\n\n// Helper para obtener un componente de icono por nombre\nexport const iconMap: Record<string, LucideIcon> = {\n  Smartphone,\n  Globe,\n  Bot,\n  BrainCircuit,\n  Palette,\n  Code2,\n  PencilRuler,\n  SearchCode,\n  LineChart,\n  Briefcase,\n  Layers,\n  HelpCircle, // Un icono por defecto\n};\n\nexport const allIconNames = Object.keys(iconMap) as Array<keyof typeof iconMap>;\n// Service icon names are now part of allIconNames, if needed for specific filtering, it can be done where used.\nexport const serviceIconNames = allIconNames;\n\n\nexport interface Service {\n  id: string;\n  title: string;\n  shortDescription: string;\n  description: string;\n  iconName: keyof typeof iconMap;\n  image: string;\n  dataAiHint: string;\n  priceInfo: string;\n  slug: string;\n}\n\nexport interface Testimonial {\n  id: string;\n  name: string;\n  company?: string;\n  quote: string;\n  avatar?: string;\n  dataAiHint: string;\n}\n\nexport interface Project {\n  id: string;\n  title: string;\n  shortDescription: string;\n  description: string;\n  image: string;\n  dataAiHint: string;\n  technologies: string[];\n  liveLink?: string;\n  repoLink?: string;\n  clientName?: string;\n  category: string;\n  iconName: keyof typeof iconMap;\n}\n\nexport type ClientInquiryStatus = 'New' | 'Contacted' | 'Quoted' | 'Closed';\n\nexport interface ClientInquiry {\n  id: string;\n  name: string;\n  email: string;\n  company?: string;\n  phoneNumber?: string;\n  serviceRequested: string;\n  details: string;\n  date: string; // ISO string\n  status: ClientInquiryStatus;\n  generatedQuote?: AiGeneratedQuote;\n}\n\n// Data arrays (services, testimonials, projects, clientInquiries)\n// are now removed from here as they will be fetched from Firebase.\n// This file now primarily serves for interfaces and the iconMap.\n"],"names":[],"mappings":";;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaO,MAAM,UAAsC;IACjD,YAAA,iNAAA,CAAA,aAAU;IACV,OAAA,uMAAA,CAAA,QAAK;IACL,KAAA,mMAAA,CAAA,MAAG;IACH,cAAA,yNAAA,CAAA,eAAY;IACZ,SAAA,2MAAA,CAAA,UAAO;IACP,OAAA,6MAAA,CAAA,QAAK;IACL,aAAA,uNAAA,CAAA,cAAW;IACX,YAAA,qNAAA,CAAA,aAAU;IACV,WAAA,mNAAA,CAAA,YAAS;IACT,WAAA,+MAAA,CAAA,YAAS;IACT,QAAA,yMAAA,CAAA,SAAM;IACN,YAAA,qNAAA,CAAA,aAAU;AACZ;AAEO,MAAM,eAAe,OAAO,IAAI,CAAC;AAEjC,MAAM,mBAAmB;;;;CAsDhC,kEAAkE;CAClE,mEAAmE;CACnE,iEAAiE","debugId":null}},
    {"offset": {"line": 415, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/schemas.ts"],"sourcesContent":["\nimport { z } from \"zod\";\nimport { allIconNames } from \"@/lib/placeholder-data\"; // Changed to allIconNames\n\n// Service Schemas\nexport const ServiceFormSchema = z.object({\n  title: z.string().min(3, \"Title must be at least 3 characters.\"),\n  shortDescription: z.string().min(10, \"Short description must be at least 10 characters.\"),\n  description: z.string().min(20, \"Description must be at least 20 characters.\"),\n  iconName: z.enum(allIconNames as [string, ...string[]], {message: \"Invalid icon selected.\"}),\n  image: z.string().url(\"Must be a valid URL for the image.\").or(z.literal(\"\").default(\"https://placehold.co/600x400.png\")),\n  dataAiHint: z.string().max(50, \"AI hint too long\").optional().default(\"\"),\n  priceInfo: z.string().min(3, \"Price info must be at least 3 characters.\"),\n  slug: z.string().min(3, \"Slug must be at least 3 characters.\").regex(/^[a-z0-9-]+$/, \"Slug can only contain lowercase letters, numbers, and hyphens.\"),\n});\nexport type ServiceFormValues = z.infer<typeof ServiceFormSchema>;\n\n// Testimonial Schemas\nexport const TestimonialFormSchema = z.object({\n  name: z.string().min(2, \"Name must be at least 2 characters.\"),\n  company: z.string().optional().default(\"\"),\n  quote: z.string().min(10, \"Quote must be at least 10 characters.\"),\n  avatar: z.string().url(\"Must be a valid URL for the avatar image.\").or(z.literal(\"\").default(\"https://placehold.co/100x100.png\")),\n  dataAiHint: z.string().max(50, \"AI hint too long\").optional().default(\"\"),\n});\nexport type TestimonialFormValues = z.infer<typeof TestimonialFormSchema>;\n\n// Project Schemas\nexport const ProjectFormSchema = z.object({\n  title: z.string().min(3, \"Title must be at least 3 characters long.\"),\n  shortDescription: z.string().min(10, \"Short description must be at least 10 characters long.\"),\n  description: z.string().min(20, \"Full description must be at least 20 characters long.\"),\n  image: z.string().url(\"Image URL must be a valid URL.\").or(z.literal(\"\").default(\"https://placehold.co/600x400.png\")),\n  dataAiHint: z.string().max(50, \"AI hint for image is too long (max 50 chars).\").optional().default(\"\"),\n  technologies: z.string().min(1, \"Please list at least one technology (comma-separated).\"), // Stored as string, split later\n  liveLink: z.string().url(\"Live link must be a valid URL.\").optional().or(z.literal(\"\")),\n  repoLink: z.string().url(\"Repository link must be a valid URL.\").optional().or(z.literal(\"\")),\n  clientName: z.string().optional().default(\"\"),\n  category: z.string().min(3, \"Category must be at least 3 characters long.\"),\n  iconName: z.enum(allIconNames as [string, ...string[]], {message: \"Invalid icon selected.\"}),\n});\nexport type ProjectFormValues = z.infer<typeof ProjectFormSchema>;\n\n\n// Quote Request Form Schema\nexport const QuoteRequestFormSchema = z.object({\n  name: z.string().min(2, {\n    message: \"Name must be at least 2 characters.\",\n  }),\n  email: z.string().email({\n    message: \"Please enter a valid email address.\",\n  }),\n  company: z.string().optional(),\n  phoneNumber: z.string().optional().default(\"\").refine(val => val === \"\" || /^\\+?[1-9]\\d{1,14}$/.test(val), {\n    message: \"Please enter a valid phone number with country code (e.g., +1234567890).\",\n  }),\n  service: z.string().min(1, { message: \"Please select a service.\" }),\n  projectDetails: z.string().min(10, {\n    message: \"Project details must be at least 10 characters.\",\n  }),\n});\nexport type QuoteRequestFormValues = z.infer<typeof QuoteRequestFormSchema>;\n\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 486, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/admin/testimonials/TestimonialForm.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { createTestimonialAction, updateTestimonialAction } from \"@/components/admin/actions\";\nimport type { Testimonial } from \"@/lib/placeholder-data\";\nimport { TestimonialFormSchema, type TestimonialFormValues } from \"@/lib/schemas\";\nimport { useRouter } from \"next/navigation\";\nimport { Loader2 } from \"lucide-react\";\nimport React from \"react\";\n\ninterface TestimonialFormProps {\n  initialData?: Testimonial | null;\n  formAction: \"create\" | \"update\";\n}\n\nexport default function TestimonialForm({ initialData, formAction }: TestimonialFormProps) {\n  const { toast } = useToast();\n  const router = useRouter();\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const mountedRef = React.useRef(true);\n\n  React.useEffect(() => {\n    mountedRef.current = true;\n    return () => {\n      mountedRef.current = false;\n    };\n  }, []);\n\n  const defaultValues = React.useMemo(() => ({\n    name: initialData?.name || \"\",\n    company: initialData?.company || \"\",\n    quote: initialData?.quote || \"\",\n    avatar: initialData?.avatar || \"https://placehold.co/100x100.png\",\n    dataAiHint: initialData?.dataAiHint || \"\",\n  }), [initialData]);\n  \n  const form = useForm<TestimonialFormValues>({\n    resolver: zodResolver(TestimonialFormSchema),\n    defaultValues,\n  });\n\n  React.useEffect(() => {\n    form.reset(defaultValues);\n  }, [defaultValues, form]);\n\n  async function onSubmit(values: TestimonialFormValues) {\n    setIsSubmitting(true);\n    try {\n      if (formAction === \"create\") {\n        await createTestimonialAction(values);\n        // Success toast removed, redirect handles feedback\n      } else if (formAction === \"update\" && initialData?.id) {\n        await updateTestimonialAction(initialData.id, values);\n        // Success toast removed, redirect handles feedback\n      }\n      // router.refresh(); // Replaced by redirect in server action\n    } catch (error: any) {\n       if (typeof error.digest === 'string' && error.digest.startsWith('NEXT_REDIRECT')) {\n        // This is a redirect error, re-throw it so Next.js can handle it.\n        throw error;\n      }\n      // This is a \"real\" error from the server action (not a redirect).\n      toast({\n        title: \"Error Submitting Testimonial\",\n        description: error.message || \"An unexpected error occurred.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      if (mountedRef.current) {\n        setIsSubmitting(false);\n      }\n    }\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\n        <FormField\n          control={form.control}\n          name=\"name\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Client Name</FormLabel>\n              <FormControl>\n                <Input placeholder=\"John Doe\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"company\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Company (Optional)</FormLabel>\n              <FormControl>\n                <Input placeholder=\"Tech Solutions Inc.\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"quote\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Quote</FormLabel>\n              <FormControl>\n                <Textarea placeholder=\"Their service was outstanding...\" className=\"min-h-[100px]\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        \n        <FormField\n          control={form.control}\n          name=\"avatar\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Avatar Image URL</FormLabel>\n              <FormControl>\n                <Input placeholder=\"https://placehold.co/100x100.png\" {...field} />\n              </FormControl>\n              <FormDescription>URL for the client's avatar. Use https://placehold.co for placeholders.</FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"dataAiHint\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Avatar AI Hint (Optional)</FormLabel>\n              <FormControl>\n                <Input placeholder=\"e.g., smiling person\" {...field} />\n              </FormControl>\n              <FormDescription>Keywords for AI to find a suitable image if using a placeholder service (max 2 words).</FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <Button type=\"submit\" disabled={isSubmitting} className=\"bg-accent hover:bg-accent/90 text-accent-foreground\">\n          {isSubmitting && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n          {formAction === \"create\" ? \"Create Testimonial\" : \"Update Testimonial\"}\n        </Button>\n      </form>\n    </Form>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}