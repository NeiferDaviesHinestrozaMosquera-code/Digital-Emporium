{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/placeholder-data.ts"],"sourcesContent":["\nimport type { LucideIcon } from 'lucide-react';\nimport { Smartphone, Globe, Bot, BrainCircuit, Palette, Code2, PencilRuler, SearchCode, LineChart, HelpCircle, Briefcase, Layers } from 'lucide-react'; // Added Briefcase, Layers\nimport type { GenerateQuoteOutput as AiGeneratedQuote } from '@/ai/flows/generate-quote';\n\n// Helper para obtener un componente de icono por nombre\nexport const iconMap: Record<string, LucideIcon> = {\n  Smartphone,\n  Globe,\n  Bot,\n  BrainCircuit,\n  Palette,\n  Code2,\n  PencilRuler,\n  SearchCode,\n  LineChart,\n  Briefcase, // Added\n  Layers,    // Added\n  HelpCircle, // Un icono por defecto\n};\n\n// Renamed for clarity as it's now used for more than just services\nexport const allIconNames = Object.keys(iconMap) as Array<keyof typeof iconMap>;\n// Kept serviceIconNames for compatibility with existing ServiceForm if needed, though allIconNames is more general.\nexport const serviceIconNames = Object.keys(iconMap) as Array<keyof typeof iconMap>;\n\n\nexport interface Service {\n  id: string;\n  title: string;\n  shortDescription: string;\n  description: string;\n  iconName: keyof typeof iconMap;\n  image: string;\n  dataAiHint: string;\n  priceInfo: string;\n  slug: string;\n}\n\nexport interface Testimonial {\n  id: string;\n  name: string;\n  company?: string;\n  quote: string;\n  avatar?: string;\n  dataAiHint: string;\n}\n\nexport interface Project {\n  id: string;\n  title: string;\n  shortDescription: string;\n  description: string;\n  image: string;\n  dataAiHint: string;\n  technologies: string[]; // Array of strings\n  liveLink?: string;\n  repoLink?: string;\n  clientName?: string;\n  category: string; // e.g., \"Web Development\", \"Mobile App\"\n  iconName: keyof typeof iconMap; // For potential display in admin or detailed views\n}\n\nexport const services: Service[] = [\n  {\n    id: 'app-dev',\n    title: 'App Creation',\n    shortDescription: 'Custom mobile applications tailored to your needs.',\n    description: 'We design and develop high-performance mobile applications for iOS and Android. From concept to launch, we provide end-to-end solutions focusing on user experience and scalability.',\n    iconName: 'Smartphone',\n    image: 'https://placehold.co/600x400.png',\n    dataAiHint: 'mobile app',\n    priceInfo: 'Starts from $5,000',\n    slug: 'app-creation',\n  },\n  {\n    id: 'web-dev',\n    title: 'Web Development',\n    shortDescription: 'Modern websites and web applications.',\n    description: 'Build responsive, fast, and secure websites and web applications. We specialize in various technologies to deliver solutions that drive engagement and growth.',\n    iconName: 'Globe',\n    image: 'https://placehold.co/600x400.png',\n    dataAiHint: 'website code',\n    priceInfo: 'Starts from $3,000',\n    slug: 'web-development',\n  },\n  {\n    id: 'bot-dev',\n    title: 'Bot Creation',\n    shortDescription: 'Intelligent chatbots for customer engagement.',\n    description: 'Automate customer interactions and streamline operations with custom chatbots. Our bots are designed for various platforms and integrate seamlessly with your existing systems.',\n    iconName: 'Bot',\n    image: 'https://placehold.co/600x400.png',\n    dataAiHint: 'robot abstract',\n    priceInfo: 'Starts from $1,500',\n    slug: 'bot-creation',\n  },\n  {\n    id: 'ai-agent-dev',\n    title: 'AI Agents',\n    shortDescription: 'Advanced AI agents to automate complex tasks.',\n    description: 'Leverage the power of artificial intelligence with custom AI agents. We build intelligent systems for data analysis, process automation, and personalized user experiences.',\n    iconName: 'BrainCircuit',\n    image: 'https://placehold.co/600x400.png',\n    dataAiHint: 'artificial intelligence',\n    priceInfo: 'Custom Quote',\n    slug: 'ai-agents',\n  },\n  {\n    id: 'web-design',\n    title: 'Web Design',\n    shortDescription: 'Visually stunning and user-friendly web designs.',\n    description: 'Our web design services focus on creating beautiful, intuitive, and effective user interfaces. We combine aesthetics with usability to deliver exceptional digital experiences.',\n    iconName: 'Palette',\n    image: 'https://placehold.co/600x400.png',\n    dataAiHint: 'web design',\n    priceInfo: 'Starts from $2,000',\n    slug: 'web-design',\n  },\n  {\n    id: 'seo-optimization',\n    title: 'SEO Optimization',\n    shortDescription: 'Improve your search engine rankings and visibility.',\n    description: 'Our SEO experts help your website rank higher on search engines, driving organic traffic and increasing online visibility through proven strategies and techniques.',\n    iconName: 'SearchCode',\n    image: 'https://placehold.co/600x400.png',\n    dataAiHint: 'seo chart',\n    priceInfo: 'Starts from $1,000/month',\n    slug: 'seo-optimization',\n  },\n];\n\nexport const testimonials: Testimonial[] = [\n  {\n    id: 't1',\n    name: 'Jane Doe',\n    company: 'Tech Solutions Inc.',\n    quote: 'Digital Emporium delivered an outstanding mobile app that exceeded our expectations. Their team is professional, skilled, and a pleasure to work with.',\n    avatar: 'https://placehold.co/100x100.png',\n    dataAiHint: 'woman portrait',\n  },\n  {\n    id: 't2',\n    name: 'John Smith',\n    company: 'Innovate Ltd.',\n    quote: 'The new website Digital Emporium built for us is fantastic! It\\'s fast, looks great, and has significantly improved our online presence.',\n    avatar: 'https://placehold.co/100x100.png',\n    dataAiHint: 'man portrait',\n  },\n  {\n    id: 't3',\n    name: 'Alice Brown',\n    company: 'E-Commerce Hub',\n    quote: 'Their AI-powered chatbot has revolutionized our customer service. Highly recommended!',\n    avatar: 'https://placehold.co/100x100.png',\n    dataAiHint: 'person smiling',\n  },\n];\n\nexport const projects: Project[] = [\n  {\n    id: 'proj1',\n    title: 'E-commerce Platform \"ShopSphere\"',\n    shortDescription: 'A full-featured online marketplace for independent sellers.',\n    description: 'Developed a scalable e-commerce platform with multi-vendor support, secure payment gateway integration, and an intuitive user interface. The platform includes advanced search, product management, and order tracking features.',\n    image: 'https://placehold.co/600x400.png',\n    dataAiHint: 'ecommerce website',\n    technologies: ['Next.js', 'React', 'Node.js', 'PostgreSQL', 'Stripe'],\n    liveLink: '#', // Replace with actual link\n    repoLink: '#', // Replace with actual link\n    clientName: 'Global Goods Inc.',\n    category: 'Web Development',\n    iconName: 'Globe',\n  },\n  {\n    id: 'proj2',\n    title: 'Mobile Fitness App \"FitTrack\"',\n    shortDescription: 'A cross-platform mobile app for tracking workouts and nutrition.',\n    description: 'Designed and built a user-friendly mobile application for iOS and Android that allows users to log workouts, track calorie intake, set fitness goals, and view progress charts. Integrated with HealthKit and Google Fit.',\n    image: 'https://placehold.co/600x400.png',\n    dataAiHint: 'fitness app',\n    technologies: ['React Native', 'Firebase', 'Chart.js'],\n    clientName: 'Wellness Journey Ltd.',\n    category: 'App Creation',\n    iconName: 'Smartphone',\n  },\n  {\n    id: 'proj3',\n    title: 'AI Customer Support Bot',\n    shortDescription: 'An intelligent chatbot to handle customer inquiries 24/7.',\n    description: 'Created an AI-powered chatbot using natural language processing to understand and respond to common customer questions, resolve issues, and escalate complex problems to human agents. Integrated with Zendesk.',\n    image: 'https://placehold.co/600x400.png',\n    dataAiHint: 'chatbot interface',\n    technologies: ['Python', 'Dialogflow', 'Genkit'],\n    category: 'AI Agents',\n    iconName: 'Bot',\n  },\n];\n\nexport type ClientInquiryStatus = 'New' | 'Contacted' | 'Quoted' | 'Closed';\n\nexport interface ClientInquiry {\n  id: string;\n  name: string;\n  email: string;\n  company?: string;\n  phoneNumber?: string;\n  serviceRequested: string;\n  details: string;\n  date: string;\n  status: ClientInquiryStatus;\n  generatedQuote?: AiGeneratedQuote;\n}\n\nexport let clientInquiries: ClientInquiry[] = [ // Made mutable with let\n  {\n    id: 'inq1',\n    name: 'Mark Johnson',\n    email: 'mark.j@example.com',\n    company: 'MJ Enterprises',\n    phoneNumber: '+15551234567',\n    serviceRequested: 'Web Development',\n    details: 'Need a 5-page corporate website with a blog and contact form. Modern design, responsive, and SEO-friendly. Existing branding guidelines available.',\n    date: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),\n    status: 'New',\n  },\n  {\n    id: 'inq2',\n    name: 'Sarah Williams',\n    email: 'sarah.w@example.com',\n    serviceRequested: 'AI Agents',\n    details: 'Interested in an AI agent for customer sentiment analysis from social media feeds. We need daily reports and integration with our CRM.',\n    date: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),\n    status: 'Contacted',\n  },\n  {\n    id: 'inq3',\n    name: 'David Lee',\n    email: 'david.l@example.com',\n    company: 'Local Events Co.',\n    phoneNumber: '+442079460958',\n    serviceRequested: 'App Creation',\n    details: 'Looking to develop a simple iOS and Android app for a local community event. Features include event schedule, map, and notifications.',\n    date: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000).toISOString(),\n    status: 'Quoted',\n     generatedQuote: {\n      projectScope: {\n        en: \"Development of iOS and Android app for community event. Features: event schedule, interactive map, push notifications. Design based on provided mockups. Admin panel for content management.\",\n        es: \"Desarrollo de aplicación iOS y Android para evento comunitario. Funcionalidades: agenda del evento, mapa interactivo, notificaciones push. Diseño basado en maquetas proporcionadas. Panel de administración para gestión de contenido.\"\n      },\n      costEstimate: {\n        en: \"$4,500 - $6,000\",\n        es: \"$4,500 - $6,000 USD\"\n      },\n      additionalNotes: {\n        en: \"Timeline: 4-6 weeks. Assumes client provides all content and branding assets.\",\n        es: \"Plazo: 4-6 semanas. Se asume que el cliente proporciona todo el contenido y los activos de marca.\"\n      }\n    }\n  },\n];\n\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 351, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 686, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport React, { useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport Link from \"next/link\";\nimport { ArrowRight, ShoppingBag, MessageSquare, Users, BarChart3, PieChartIcon, LineChartIcon, Briefcase } from \"lucide-react\"; // Added Briefcase\nimport { services, testimonials, clientInquiries, projects, type ClientInquiryStatus } from \"@/lib/placeholder-data\"; // Added projects\nimport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  type ChartConfig\n} from \"@/components/ui/chart\";\nimport { Bar, BarChart, Pie, PieChart, Line, LineChart, CartesianGrid, XAxis, YAxis, Cell } from \"recharts\";\nimport { format, parseISO, startOfMonth, compareAsc } from 'date-fns';\n\nexport default function AdminDashboardPage() {\n  const router = useRouter();\n\n  useEffect(() => {\n    router.refresh();\n  }, []);\n\n  const stats = [\n    { title: \"Total Services\", value: services.length, icon: ShoppingBag, href: \"/admin/services\" },\n    { title: \"Total Testimonials\", value: testimonials.length, icon: Users, href: \"/admin/testimonials\" },\n    { title: \"Total Projects\", value: projects.length, icon: Briefcase, href: \"/admin/projects\" }, // Added Projects stat\n    { title: \"New Inquiries\", value: clientInquiries.filter(inq => inq.status === 'New').length, icon: MessageSquare, href: \"/admin/inquiries\" },\n    { title: \"Total Inquiries\", value: clientInquiries.length, icon: MessageSquare, href: \"/admin/inquiries\" },\n  ];\n\n  const serviceSpecificColors = [\n    \"hsl(var(--primary))\",\n    \"hsl(var(--accent))\",\n    \"hsl(var(--chart-2))\",\n    \"hsl(var(--chart-4))\",\n    \"hsl(var(--chart-1))\",\n    \"hsl(var(--chart-5))\",\n  ];\n\n  const serviceRequestCounts: { [key: string]: number } = {};\n  clientInquiries.forEach(inquiry => {\n    serviceRequestCounts[inquiry.serviceRequested] = (serviceRequestCounts[inquiry.serviceRequested] || 0) + 1;\n  });\n\n  const serviceRequestChartData = Object.entries(serviceRequestCounts)\n    .map(([name, count], index) => ({\n        name,\n        count,\n        fill: serviceSpecificColors[index % serviceSpecificColors.length]\n    }))\n    .sort((a, b) => b.count - a.count);\n\n  const serviceRequestChartConfig = serviceRequestChartData.reduce((acc, item, index) => {\n    acc[item.name] = {\n      label: item.name,\n      color: serviceSpecificColors[index % serviceSpecificColors.length],\n    };\n    return acc;\n  }, {} as ChartConfig);\n\n  const statusCounts: { [key in ClientInquiryStatus]: number } = {\n    New: 0,\n    Contacted: 0,\n    Quoted: 0,\n    Closed: 0,\n  };\n  clientInquiries.forEach(inquiry => {\n    statusCounts[inquiry.status] = (statusCounts[inquiry.status] || 0) + 1;\n  });\n\n  const statusColors = [\n    \"hsl(var(--chart-1))\",\n    \"hsl(var(--chart-2))\",\n    \"hsl(var(--chart-3))\",\n    \"hsl(var(--chart-4))\",\n  ];\n  const statusChartData = Object.entries(statusCounts).map(([name, value], index) => ({\n    status: name,\n    count: value,\n    fill: statusColors[index % statusColors.length],\n  }));\n\n  const statusChartConfig = {\n    New: { label: \"New\", color: statusColors[0] },\n    Contacted: { label: \"Contacted\", color: statusColors[1] },\n    Quoted: { label: \"Quoted\", color: statusColors[2] },\n    Closed: { label: \"Closed\", color: statusColors[3] },\n  } satisfies ChartConfig;\n\n  const inquiriesByMonth: { [key: string]: { date: Date, count: number } } = {};\n  clientInquiries.forEach(inquiry => {\n    try {\n      const inquiryDate = parseISO(inquiry.date);\n      const monthKey = format(startOfMonth(inquiryDate), 'yyyy-MM-dd');\n      \n      if (!inquiriesByMonth[monthKey]) {\n        inquiriesByMonth[monthKey] = { date: startOfMonth(inquiryDate), count: 0 };\n      }\n      inquiriesByMonth[monthKey].count += 1;\n    } catch (e) {\n      console.warn(`Could not parse date for inquiry ${inquiry.id}: ${inquiry.date}`, e);\n    }\n  });\n  \n  const inquiriesTimeChartData = Object.values(inquiriesByMonth)\n    .sort((a, b) => compareAsc(a.date, b.date))\n    .map(item => ({\n      month: format(item.date, 'MMM yyyy'),\n      count: item.count,\n    }));\n    \n  const inquiriesTimeChartConfig = {\n    count: {\n      label: \"Inquiries\",\n      color: \"hsl(var(--primary))\",\n    },\n  } satisfies ChartConfig;\n\n  return (\n    <div className=\"space-y-8\">\n      <h1 className=\"text-3xl font-bold text-primary\">Admin Dashboard</h1>\n\n      <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-5\"> {/* Adjusted for 5 stats */}\n        {stats.map((stat) => (\n          <Card key={stat.title} className=\"shadow-lg\">\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium text-muted-foreground\">\n                {stat.title}\n              </CardTitle>\n              <stat.icon className=\"h-5 w-5 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-3xl font-bold text-primary\">{stat.value}</div>\n              <Button variant=\"link\" asChild className=\"px-0 text-sm text-accent hover:text-accent/80\">\n                <Link href={stat.href}>\n                  View Details <ArrowRight className=\"ml-1 h-4 w-4\" />\n                </Link>\n              </Button>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      <div className=\"grid gap-6 md:grid-cols-1 lg:grid-cols-2\">\n        <Card className=\"shadow-lg\">\n          <CardHeader>\n            <CardTitle className=\"text-xl text-primary flex items-center gap-2\">\n              <BarChart3 className=\"h-6 w-6\" /> Service Request Distribution\n            </CardTitle>\n            <CardDescription>Number of inquiries per service requested.</CardDescription>\n          </CardHeader>\n          <CardContent>\n            {serviceRequestChartData.length > 0 ? (\n              <ChartContainer config={serviceRequestChartConfig} className=\"min-h-[250px] w-full\">\n                <BarChart\n                    accessibilityLayer\n                    data={serviceRequestChartData}\n                    layout=\"vertical\"\n                    margin={{left: 20, right: 20, top: 5, bottom: 5}}\n                    isAnimationActive={true}\n                    animationDuration={700}\n                >\n                  <CartesianGrid vertical={true} horizontal={false} strokeDasharray=\"3 3\" />\n                  <XAxis type=\"number\" dataKey=\"count\" allowDecimals={false} />\n                  <YAxis dataKey=\"name\" type=\"category\" tickLine={false} axisLine={false} strokeWidth={1} width={120} interval={0} />\n                  <ChartTooltip content={<ChartTooltipContent hideLabel />} cursor={{fill: 'hsl(var(--muted))'}} />\n                  <Bar dataKey=\"count\" radius={[0, 5, 5, 0]} isAnimationActive={true} barSize={25}>\n                     {serviceRequestChartData.map((entry) => (\n                        <Cell key={`cell-${entry.name}`} fill={entry.fill} />\n                      ))}\n                  </Bar>\n                </BarChart>\n              </ChartContainer>\n            ) : (\n              <p className=\"text-muted-foreground text-center py-4\">No inquiry data to display service distribution.</p>\n            )}\n          </CardContent>\n        </Card>\n\n        <Card className=\"shadow-lg\">\n          <CardHeader>\n            <CardTitle className=\"text-xl text-primary flex items-center gap-2\">\n              <PieChartIcon className=\"h-6 w-6\" /> Inquiry Status Overview\n            </CardTitle>\n            <CardDescription>Distribution of inquiries by current status.</CardDescription>\n          </CardHeader>\n          <CardContent className=\"flex items-center justify-center\">\n            {clientInquiries.length > 0 && statusChartData.some(s => s.count > 0) ? (\n              <ChartContainer config={statusChartConfig} className=\"min-h-[250px] w-full max-w-[300px] aspect-square\">\n                <PieChart isAnimationActive={true} animationDuration={700}>\n                  <ChartTooltip content={<ChartTooltipContent nameKey=\"count\" hideLabel />} cursor={{fill: 'hsl(var(--muted))'}} />\n                  <Pie\n                    data={statusChartData}\n                    dataKey=\"count\"\n                    nameKey=\"status\"\n                    innerRadius={60}\n                    outerRadius={90}\n                    paddingAngle={2}\n                    isAnimationActive={true}\n                    labelLine={false}\n                    label={({\n                        cx,\n                        cy,\n                        midAngle,\n                        innerRadius,\n                        outerRadius,\n                        percent,\n                      }) => {\n                        const RADIAN = Math.PI / 180;\n                        const radius = innerRadius + (outerRadius - innerRadius) * 0.5 + 15;\n                        const x = cx + radius * Math.cos(-midAngle * RADIAN);\n                        const y = cy + radius * Math.sin(-midAngle * RADIAN);\n                        return percent > 0.05 ? ( \n                          <text\n                            x={x}\n                            y={y}\n                            fill=\"hsl(var(--foreground))\"\n                            textAnchor={x > cx ? 'start' : 'end'}\n                            dominantBaseline=\"central\"\n                            className=\"text-xs\"\n                          >\n                            {`${(percent * 100).toFixed(0)}%`}\n                          </text>\n                        ) : null;\n                      }}\n                  >\n                    {statusChartData.map((entry) => (\n                      <Cell key={`cell-${entry.status}`} fill={entry.fill} />\n                    ))}\n                  </Pie>\n                  <ChartLegend content={<ChartLegendContent nameKey=\"status\" />} className=\"-translate-y-2 flex-wrap gap-2 [&>*]:basis-1/4 [&>*]:justify-center\" />\n                </PieChart>\n              </ChartContainer>\n            ) : (\n              <p className=\"text-muted-foreground text-center py-4\">No inquiry data to display status overview.</p>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n      \n      <Card className=\"shadow-lg\">\n        <CardHeader>\n          <CardTitle className=\"text-xl text-primary flex items-center gap-2\">\n            <LineChartIcon className=\"h-6 w-6\" /> Inquiries Over Time\n          </CardTitle>\n          <CardDescription>Number of inquiries received per month.</CardDescription>\n        </CardHeader>\n        <CardContent>\n          {inquiriesTimeChartData.length > 0 ? (\n            <ChartContainer config={inquiriesTimeChartConfig} className=\"min-h-[300px] w-full\">\n              <LineChart\n                accessibilityLayer\n                data={inquiriesTimeChartData}\n                margin={{\n                  left: 12,\n                  right: 20, \n                  top: 5,\n                  bottom: 5,\n                }}\n                isAnimationActive={true}\n                animationDuration={700}\n              >\n                <CartesianGrid vertical={false} strokeDasharray=\"3 3\"/>\n                <XAxis\n                  dataKey=\"month\"\n                  tickLine={false}\n                  axisLine={false}\n                  tickMargin={8}\n                />\n                <YAxis allowDecimals={false} />\n                <ChartTooltip cursor={{strokeDasharray: '3 3', fill: 'hsl(var(--muted))'}} content={<ChartTooltipContent indicator=\"line\" />} />\n                <Line\n                  dataKey=\"count\"\n                  type=\"monotone\" \n                  stroke=\"hsl(var(--primary))\" \n                  strokeWidth={3} \n                  dot={{\n                    fill: \"hsl(var(--primary))\",\n                    r: 4, \n                    strokeWidth: 2,\n                    stroke: \"hsl(var(--background))\" \n                  }}\n                  activeDot={{\n                    r: 6, \n                    fill: \"hsl(var(--primary))\",\n                    stroke: \"hsl(var(--background))\",\n                    strokeWidth: 2,\n                  }}\n                  isAnimationActive={true}\n                />\n              </LineChart>\n            </ChartContainer>\n          ) : (\n            <p className=\"text-muted-foreground text-center py-4\">No inquiry data to display trend over time.</p>\n          )}\n        </CardContent>\n      </Card>\n\n      <Card className=\"shadow-lg\">\n        <CardHeader>\n          <CardTitle className=\"text-xl text-primary\">Recent Inquiries</CardTitle>\n          <CardDescription>Top 5 most recent client inquiries.</CardDescription>\n        </CardHeader>\n        <CardContent>\n          {clientInquiries.length > 0 ? clientInquiries.slice(0, 5).map((inquiry) => (\n            <div key={inquiry.id} className=\"flex items-center justify-between py-3 border-b last:border-b-0 hover:bg-muted/30 -mx-6 px-6 transition-colors\">\n              <div>\n                <p className=\"font-medium\">{inquiry.name} <span className=\"text-xs text-muted-foreground\">({inquiry.serviceRequested})</span></p>\n                <p className=\"text-sm text-muted-foreground\">{inquiry.email}</p>\n              </div>\n              <Button variant=\"outline\" size=\"sm\" asChild>\n                <Link href={`/admin/inquiries?id=${inquiry.id}`}>View Details</Link>\n              </Button>\n            </div>\n          )) : (\n            <p className=\"text-muted-foreground\">No recent inquiries.</p>\n          )}\n           <div className=\"mt-6 text-center\">\n             <Button variant=\"default\" asChild className=\"bg-primary hover:bg-primary/90 text-primary-foreground\">\n                <Link href=\"/admin/inquiries\">View All Inquiries</Link>\n             </Button>\n           </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\n    "],"names":[],"mappings":"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","debugId":null}}]
}