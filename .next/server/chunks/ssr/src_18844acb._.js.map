{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 384, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%5Blang%5D/admin/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport React, { useEffect, useState } from 'react';\nimport { useRouter, useParams } from 'next/navigation'; // Added useParams\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport Link from \"next/link\";\nimport { ArrowRight, ShoppingBag, MessageSquare, Users, BarChart3, PieChartIcon, LineChartIcon, Briefcase, Loader2 } from \"lucide-react\";\nimport type { Service, Testimonial, Project, ClientInquiry, ClientInquiryStatus } from \"@/lib/placeholder-data\";\nimport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  type ChartConfig\n} from \"@/components/ui/chart\";\nimport { Bar, BarChart, Pie, PieChart, Line, LineChart, CartesianGrid, XAxis, YAxis, Cell } from \"recharts\";\nimport { format, parseISO, startOfMonth, compareAsc } from 'date-fns';\nimport { db } from \"@/lib/firebase/config\";\nimport { ref, get, child } from \"firebase/database\";\nimport { useAuth } from '@/contexts/AuthContext'; // Added useAuth\nimport type { Locale } from '@/lib/i18n/i18n-config'; // Added Locale\n\ninterface DashboardStats {\n  totalServices: number;\n  totalTestimonials: number;\n  totalProjects: number;\n  newInquiries: number;\n  totalInquiries: number;\n  serviceRequestChartData: Array<{name: string; count: number; fill: string}>;\n  statusChartData: Array<{status: string; count: number; fill: string}>;\n  inquiriesTimeChartData: Array<{month: string; count: number}>;\n  recentInquiries: ClientInquiry[];\n}\n\nconst serviceSpecificColors = [\n  \"hsl(var(--primary))\",\n  \"hsl(var(--accent))\",\n  \"hsl(var(--chart-2))\",\n  \"hsl(var(--chart-4))\",\n  \"hsl(var(--chart-1))\",\n  \"hsl(var(--chart-5))\",\n];\n\nconst statusColors = [\n  \"hsl(var(--chart-1))\", \n  \"hsl(var(--chart-2))\", \n  \"hsl(var(--chart-3))\", \n  \"hsl(var(--chart-4))\", \n];\n\nconst statusChartConfig = {\n    New: { label: \"New\", color: statusColors[0] },\n    Contacted: { label: \"Contacted\", color: statusColors[1] },\n    Quoted: { label: \"Quoted\", color: statusColors[2] },\n    Closed: { label: \"Closed\", color: statusColors[3] },\n  } satisfies ChartConfig;\n\nconst inquiriesTimeChartConfig = {\n    count: {\n      label: \"Inquiries\",\n      color: \"hsl(var(--primary))\",\n    },\n  } satisfies ChartConfig;\n\n\nasync function getDashboardData(): Promise<DashboardStats> {\n  const dbRef = ref(db);\n  let servicesArray: Service[] = [];\n  let testimonialsArray: Testimonial[] = [];\n  let projectsArray: Project[] = [];\n  let clientInquiries: ClientInquiry[] = [];\n\n  try {\n    const servicesSnapshot = await get(child(dbRef, 'services'));\n    if (servicesSnapshot.exists()) {\n        const servicesData = servicesSnapshot.val();\n        servicesArray = Object.keys(servicesData).map(key => ({id: key, ...servicesData[key]}));\n    }\n  } catch (e) { console.error(\"Error fetching services for dashboard:\", e); }\n\n  try {\n    const testimonialsSnapshot = await get(child(dbRef, 'testimonials'));\n    if (testimonialsSnapshot.exists()) {\n        const testimonialsData = testimonialsSnapshot.val();\n        testimonialsArray = Object.keys(testimonialsData).map(key => ({id: key, ...testimonialsData[key]}));\n    }\n  } catch (e) { console.error(\"Error fetching testimonials for dashboard:\", e); }\n  \n  try {\n    const projectsSnapshot = await get(child(dbRef, 'projects'));\n    if (projectsSnapshot.exists()) {\n        const projectsData = projectsSnapshot.val();\n        projectsArray = Object.keys(projectsData).map(key => ({id: key, ...projectsData[key]}));\n    }\n  } catch (e) { console.error(\"Error fetching projects for dashboard:\", e); }\n\n  try {\n    const inquiriesSnapshot = await get(child(dbRef, 'inquiries'));\n    if (inquiriesSnapshot.exists()) {\n        const inquiriesData = inquiriesSnapshot.val();\n        clientInquiries = Object.keys(inquiriesData).map(key => ({id:key, ...inquiriesData[key]}));\n    }\n  } catch (e) { console.error(\"Error fetching inquiries for dashboard:\", e); }\n\n\n  const serviceRequestCounts: { [key: string]: number } = {};\n  clientInquiries.forEach(inquiry => {\n    serviceRequestCounts[inquiry.serviceRequested] = (serviceRequestCounts[inquiry.serviceRequested] || 0) + 1;\n  });\n\n  const serviceRequestChartData = Object.entries(serviceRequestCounts)\n    .map(([name, count], index) => ({\n        name,\n        count,\n        fill: serviceSpecificColors[index % serviceSpecificColors.length]\n    }))\n    .sort((a, b) => b.count - a.count);\n\n  const statusCounts: { [key in ClientInquiryStatus]: number } = { New: 0, Contacted: 0, Quoted: 0, Closed: 0 };\n  clientInquiries.forEach(inquiry => {\n    statusCounts[inquiry.status] = (statusCounts[inquiry.status] || 0) + 1;\n  });\n  const statusChartData = Object.entries(statusCounts).map(([name, value], index) => ({\n    status: name,\n    count: value,\n    fill: statusColors[index % statusColors.length],\n  }));\n\n  const inquiriesByMonth: { [key: string]: { date: Date, count: number } } = {};\n  clientInquiries.forEach(inquiry => {\n    try {\n      const inquiryDate = parseISO(inquiry.date);\n      const monthKey = format(startOfMonth(inquiryDate), 'yyyy-MM-dd'); \n      if (!inquiriesByMonth[monthKey]) {\n        inquiriesByMonth[monthKey] = { date: startOfMonth(inquiryDate), count: 0 };\n      }\n      inquiriesByMonth[monthKey].count += 1;\n    } catch (e) { console.warn(`Could not parse date for inquiry: ${inquiry.id}`, e); }\n  });\n\n  const inquiriesTimeChartData = Object.values(inquiriesByMonth)\n    .sort((a, b) => compareAsc(a.date, b.date)) \n    .map(item => ({\n      month: format(item.date, 'MMM yyyy'),\n      count: item.count,\n    }));\n\n  const recentInquiries = clientInquiries.sort((a,b) => new Date(b.date).getTime() - new Date(a.date).getTime()).slice(0,5);\n\n  return {\n    totalServices: servicesArray.length,\n    totalTestimonials: testimonialsArray.length,\n    totalProjects: projectsArray.length,\n    newInquiries: clientInquiries.filter(inq => inq.status === 'New').length,\n    totalInquiries: clientInquiries.length,\n    serviceRequestChartData,\n    statusChartData,\n    inquiriesTimeChartData,\n    recentInquiries\n  };\n}\n\n\nexport default function AdminDashboardPage() {\n  const router = useRouter();\n  const params = useParams(); // Get params\n  const lang = params.lang as Locale || 'en'; // Get lang\n  const { user } = useAuth(); // Get user for conditional fetching\n  const [dashboardData, setDashboardData] = useState<DashboardStats | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    async function fetchData() {\n      if (!user) { // Only fetch if user is authenticated\n        setIsLoading(false); // Stop loading if no user\n        return;\n      }\n      setIsLoading(true);\n      setError(null);\n      try {\n        const data = await getDashboardData();\n        setDashboardData(data);\n      } catch (error: any) {\n        console.error(\"Failed to fetch dashboard data from Firebase:\", error);\n        setError(error.message || \"Failed to load dashboard data.\");\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchData();\n    // router.refresh(); // Re-enable if data seems stale after actions\n  }, [user, router]); // Depend on user to re-fetch if auth state changes\n\n  if (isLoading) {\n    return (\n      <div className=\"flex h-screen items-center justify-center\">\n        <Loader2 className=\"h-12 w-12 animate-spin text-primary\" />\n        <p className=\"ml-4 text-muted-foreground\">Loading dashboard data...</p>\n      </div>\n    );\n  }\n  \n  if (error) {\n    return (\n      <div className=\"flex h-screen items-center justify-center text-destructive\">\n        <p>Error: {error}</p>\n      </div>\n    );\n  }\n\n  if (!dashboardData) {\n     return (\n      <div className=\"flex h-screen items-center justify-center\">\n        <p className=\"text-muted-foreground\">No dashboard data available or user not authenticated.</p>\n      </div>\n    );\n  }\n\n  const { \n    totalServices, totalTestimonials, totalProjects, newInquiries, totalInquiries,\n    serviceRequestChartData, statusChartData, inquiriesTimeChartData, recentInquiries\n  } = dashboardData;\n\n  const stats = [\n    { title: \"Total Services\", value: totalServices, icon: ShoppingBag, href: `/${lang}/admin/services` },\n    { title: \"Total Testimonials\", value: totalTestimonials, icon: Users, href: `/${lang}/admin/testimonials` },\n    { title: \"Total Projects\", value: totalProjects, icon: Briefcase, href: `/${lang}/admin/projects` },\n    { title: \"New Inquiries\", value: newInquiries, icon: MessageSquare, href: `/${lang}/admin/inquiries?statusFilter=New` },\n    { title: \"Total Inquiries\", value: totalInquiries, icon: MessageSquare, href: `/${lang}/admin/inquiries` },\n  ];\n  \n  const serviceRequestChartConfig = serviceRequestChartData.reduce((acc, item) => {\n    acc[item.name] = {\n      label: item.name,\n      color: item.fill,\n    };\n    return acc;\n  }, {} as ChartConfig);\n\n\n  return (\n    <div className=\"space-y-8\">\n      <h1 className=\"text-3xl font-bold text-primary\">Admin Dashboard</h1>\n\n      <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-5\">\n        {stats.map((stat) => (\n          <Card key={stat.title} className=\"shadow-lg\">\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium text-muted-foreground\">\n                {stat.title}\n              </CardTitle>\n              <stat.icon className=\"h-5 w-5 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-3xl font-bold text-primary\">{stat.value}</div>\n              <Button variant=\"link\" asChild className=\"px-0 text-sm text-accent hover:text-accent/80\">\n                <Link href={stat.href}>\n                  View Details <ArrowRight className=\"ml-1 h-4 w-4\" />\n                </Link>\n              </Button>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      <div className=\"grid gap-6 md:grid-cols-1 lg:grid-cols-2\">\n        <Card className=\"shadow-lg\">\n          <CardHeader>\n            <CardTitle className=\"text-xl text-primary flex items-center gap-2\">\n              <BarChart3 className=\"h-6 w-6\" /> Service Request Distribution\n            </CardTitle>\n            <CardDescription>Number of inquiries per service requested.</CardDescription>\n          </CardHeader>\n          <CardContent>\n            {serviceRequestChartData.length > 0 ? (\n              <ChartContainer config={serviceRequestChartConfig} className=\"min-h-[250px] w-full\">\n                <BarChart\n                    accessibilityLayer\n                    data={serviceRequestChartData}\n                    layout=\"vertical\"\n                    margin={{left: 20, right: 20, top: 5, bottom: 5}}\n                    isAnimationActive={true}\n                    animationDuration={700}\n                >\n                  <CartesianGrid vertical={true} horizontal={false} strokeDasharray=\"3 3\" />\n                  <XAxis type=\"number\" dataKey=\"count\" allowDecimals={false} />\n                  <YAxis dataKey=\"name\" type=\"category\" tickLine={false} axisLine={false} strokeWidth={1} width={120} interval={0} />\n                  <ChartTooltip content={<ChartTooltipContent hideLabel />} cursor={{fill: 'hsl(var(--muted))'}} />\n                  <Bar dataKey=\"count\" radius={[0, 5, 5, 0]} isAnimationActive={true} barSize={25}>\n                     {serviceRequestChartData.map((entry) => (\n                        <Cell key={`cell-${entry.name}`} fill={entry.fill} />\n                      ))}\n                  </Bar>\n                </BarChart>\n              </ChartContainer>\n            ) : (\n              <p className=\"text-muted-foreground text-center py-4\">No inquiry data to display service distribution.</p>\n            )}\n          </CardContent>\n        </Card>\n\n        <Card className=\"shadow-lg\">\n          <CardHeader>\n            <CardTitle className=\"text-xl text-primary flex items-center gap-2\">\n              <PieChartIcon className=\"h-6 w-6\" /> Inquiry Status Overview\n            </CardTitle>\n            <CardDescription>Distribution of inquiries by current status.</CardDescription>\n          </CardHeader>\n          <CardContent className=\"flex items-center justify-center\">\n            {totalInquiries > 0 && statusChartData.some(s => s.count > 0) ? (\n              <ChartContainer config={statusChartConfig} className=\"min-h-[250px] w-full max-w-[300px] aspect-square\">\n                <PieChart isAnimationActive={true} animationDuration={700}>\n                  <ChartTooltip content={<ChartTooltipContent nameKey=\"count\" hideLabel />} cursor={{fill: 'hsl(var(--muted))'}} />\n                  <Pie\n                    data={statusChartData}\n                    dataKey=\"count\"\n                    nameKey=\"status\"\n                    innerRadius={60}\n                    outerRadius={90}\n                    paddingAngle={2}\n                    isAnimationActive={true}\n                    labelLine={false}\n                    label={({\n                        cx,\n                        cy,\n                        midAngle,\n                        innerRadius,\n                        outerRadius,\n                        percent,\n                      }) => {\n                        const RADIAN = Math.PI / 180;\n                        const radius = innerRadius + (outerRadius - innerRadius) * 0.5 + 15;\n                        const x = cx + radius * Math.cos(-midAngle * RADIAN);\n                        const y = cy + radius * Math.sin(-midAngle * RADIAN);\n                        return percent > 0.05 ? ( \n                          <text\n                            x={x}\n                            y={y}\n                            fill=\"hsl(var(--foreground))\"\n                            textAnchor={x > cx ? 'start' : 'end'}\n                            dominantBaseline=\"central\"\n                            className=\"text-xs\"\n                          >\n                            {`${(percent * 100).toFixed(0)}%`}\n                          </text>\n                        ) : null;\n                      }}\n                  >\n                    {statusChartData.map((entry) => (\n                      <Cell key={`cell-${entry.status}`} fill={entry.fill} />\n                    ))}\n                  </Pie>\n                  <ChartLegend content={<ChartLegendContent nameKey=\"status\" />} className=\"-translate-y-2 flex-wrap gap-2 [&>*]:basis-1/4 [&>*]:justify-center\" />\n                </PieChart>\n              </ChartContainer>\n            ) : (\n              <p className=\"text-muted-foreground text-center py-4\">No inquiry data to display status overview.</p>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n      \n      <Card className=\"shadow-lg\">\n        <CardHeader>\n          <CardTitle className=\"text-xl text-primary flex items-center gap-2\">\n            <LineChartIcon className=\"h-6 w-6\" /> Inquiries Over Time\n          </CardTitle>\n          <CardDescription>Number of inquiries received per month.</CardDescription>\n        </CardHeader>\n        <CardContent>\n          {inquiriesTimeChartData.length > 0 ? (\n            <ChartContainer config={inquiriesTimeChartConfig} className=\"min-h-[300px] w-full\">\n              <LineChart\n                accessibilityLayer\n                data={inquiriesTimeChartData}\n                margin={{\n                  left: 12,\n                  right: 20, \n                  top: 5,\n                  bottom: 5,\n                }}\n                isAnimationActive={true}\n                animationDuration={700}\n              >\n                <CartesianGrid vertical={false} strokeDasharray=\"3 3\"/>\n                <XAxis\n                  dataKey=\"month\"\n                  tickLine={false}\n                  axisLine={false}\n                  tickMargin={8}\n                />\n                <YAxis allowDecimals={false} />\n                <ChartTooltip cursor={{strokeDasharray: '3 3', fill: 'hsl(var(--muted))'}} content={<ChartTooltipContent indicator=\"line\" />} />\n                <Line\n                  dataKey=\"count\"\n                  type=\"monotone\" \n                  stroke=\"hsl(var(--primary))\" \n                  strokeWidth={3} \n                  dot={{\n                    fill: \"hsl(var(--primary))\",\n                    r: 4, \n                    strokeWidth: 2,\n                    stroke: \"hsl(var(--background))\" \n                  }}\n                  activeDot={{\n                    r: 6, \n                    fill: \"hsl(var(--primary))\",\n                    stroke: \"hsl(var(--background))\",\n                    strokeWidth: 2,\n                  }}\n                  isAnimationActive={true}\n                />\n              </LineChart>\n            </ChartContainer>\n          ) : (\n            <p className=\"text-muted-foreground text-center py-4\">No inquiry data to display trend over time.</p>\n          )}\n        </CardContent>\n      </Card>\n\n      <Card className=\"shadow-lg\">\n        <CardHeader>\n          <CardTitle className=\"text-xl text-primary\">Recent Inquiries</CardTitle>\n          <CardDescription>Top 5 most recent client inquiries.</CardDescription>\n        </CardHeader>\n        <CardContent>\n          {recentInquiries.length > 0 ? recentInquiries.map((inquiry) => (\n            <div key={inquiry.id} className=\"flex items-center justify-between py-3 border-b last:border-b-0 hover:bg-muted/30 -mx-6 px-6 transition-colors\">\n              <div>\n                <p className=\"font-medium\">{inquiry.name} <span className=\"text-xs text-muted-foreground\">({inquiry.serviceRequested})</span></p>\n                <p className=\"text-sm text-muted-foreground\">{inquiry.email}</p>\n              </div>\n              <Button variant=\"outline\" size=\"sm\" asChild>\n                <Link href={`/${lang}/admin/inquiries?id=${inquiry.id}`}>View Details</Link>\n              </Button>\n            </div>\n          )) : (\n            <p className=\"text-muted-foreground\">No recent inquiries.</p>\n          )}\n           <div className=\"mt-6 text-center\">\n             <Button variant=\"default\" asChild className=\"bg-primary hover:bg-primary/90 text-primary-foreground\">\n                <Link href={`/${lang}/admin/inquiries`}>View All Inquiries</Link>\n             </Button>\n           </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}