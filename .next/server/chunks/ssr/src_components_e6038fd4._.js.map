{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/admin/actions.ts"],"sourcesContent":["\n\"use server\";\n\nimport { generateQuote, type GenerateQuoteInput, type GenerateQuoteOutput } from \"@/ai/flows/generate-quote\";\nimport { clientInquiries, services, testimonials, type ClientInquiryStatus, type ClientInquiry, type Service, type Testimonial } from \"@/lib/placeholder-data\";\nimport type { ServiceFormValues, TestimonialFormValues, QuoteRequestFormValues } from \"@/lib/schemas\";\nimport { revalidatePath } from \"next/cache\";\nimport { redirect } from \"next/navigation\";\n\ninterface GenerateQuoteActionInputForServer extends GenerateQuoteInput {\n  inquiryId: string;\n}\n\n// AI Quote Generation\nexport async function generateQuoteAction(input: GenerateQuoteActionInputForServer): Promise<GenerateQuoteOutput> {\n  console.log(\"Server action: generateQuoteAction called with input:\", input);\n  try {\n    // The generateQuote flow now expects GenerateQuoteInput (just requestDetails)\n    const result = await generateQuote({ requestDetails: input.requestDetails });\n    \n    const inquiryIndex = clientInquiries.findIndex(inq => inq.id === input.inquiryId);\n    if (inquiryIndex !== -1) {\n      clientInquiries[inquiryIndex].generatedQuote = result; // result is now GenerateQuoteOutput (bilingual)\n      if (clientInquiries[inquiryIndex].status !== 'Quoted') { \n         clientInquiries[inquiryIndex].status = 'Quoted';\n      }\n      console.log(`Generated bilingual quote added to inquiry ID ${input.inquiryId}:`, result);\n    } else {\n      console.warn(`generateQuoteAction: Inquiry with ID ${input.inquiryId} not found.`);\n      throw new Error(`Inquiry with ID ${input.inquiryId} not found for quote generation.`);\n    }\n\n    revalidatePath(\"/admin/inquiries\");\n    revalidatePath(\"/admin\"); \n    return result; // Return the bilingual quote\n  } catch (error) {\n    console.error(\"Error in generateQuoteAction:\", error);\n    if (error instanceof Error) {\n        throw new Error(`AI Quote Generation Failed: ${error.message}`);\n    }\n    throw new Error(\"An unexpected error occurred during AI quote generation.\");\n  }\n}\n\n// Service Actions\nexport async function createServiceAction(values: ServiceFormValues) {\n  console.log(\"Creating new service (simulated in-memory)\", values);\n  const newService: Service = {\n    id: `service-${Date.now()}-${Math.random().toString(36).substring(2, 7)}`,\n    ...values,\n    image: values.image || \"https://placehold.co/600x400.png\",\n  };\n  services.unshift(newService); // Add to the beginning of the array\n  console.log(\"Services array updated:\", services.length);\n  \n  revalidatePath(\"/admin/services\");\n  revalidatePath(\"/services\"); \n  revalidatePath(\"/\"); \n  revalidatePath(\"/admin\"); \n  redirect(\"/admin/services\");\n}\n\nexport async function updateServiceAction(id: string, values: ServiceFormValues) {\n  console.log(`Updating service ${id} (simulated in-memory)`, values);\n  const serviceIndex = services.findIndex(s => s.id === id);\n  if (serviceIndex !== -1) {\n    services[serviceIndex] = { \n        ...services[serviceIndex], \n        ...values,\n        image: values.image || \"https://placehold.co/600x400.png\",\n    };\n    console.log(`Service ID ${id} updated.`);\n  } else {\n    console.warn(`updateServiceAction: Service with ID ${id} not found.`);\n    throw new Error(`Service with ID ${id} not found for update.`);\n  }\n\n  revalidatePath(\"/admin/services\");\n  revalidatePath(`/admin/services/edit/${id}`);\n  revalidatePath(\"/services\"); \n  revalidatePath(\"/\"); \n  revalidatePath(\"/admin\");\n  redirect(\"/admin/services\");\n}\n\nexport async function deleteServiceAction(id: string) {\n  console.log(`Deleting service ${id} (simulated in-memory)`);\n  const serviceIndex = services.findIndex(s => s.id === id);\n  if (serviceIndex !== -1) {\n    services.splice(serviceIndex, 1);\n    console.log(`Service ID ${id} deleted. Remaining services:`, services.length);\n  } else {\n    console.warn(`deleteServiceAction: Service with ID ${id} not found.`);\n  }\n  \n  revalidatePath(\"/admin/services\");\n  revalidatePath(\"/services\"); \n  revalidatePath(\"/\"); \n  revalidatePath(\"/admin\");\n}\n\n\n// Testimonial Actions\nexport async function createTestimonialAction(values: TestimonialFormValues) {\n  console.log(\"Creating new testimonial (simulated in-memory)\", values);\n  const newTestimonial: Testimonial = {\n    id: `testimonial-${Date.now()}-${Math.random().toString(36).substring(2, 7)}`,\n    ...values,\n    avatar: values.avatar || \"https://placehold.co/100x100.png\",\n  };\n  testimonials.unshift(newTestimonial); // Add to the beginning\n  console.log(\"Testimonials array updated:\", testimonials.length);\n\n  revalidatePath(\"/admin/testimonials\");\n  revalidatePath(\"/\"); \n  revalidatePath(\"/admin\");\n  redirect(\"/admin/testimonials\");\n}\n\nexport async function updateTestimonialAction(id: string, values: TestimonialFormValues) {\n  console.log(`Updating testimonial ${id} (simulated in-memory)`, values);\n  const testimonialIndex = testimonials.findIndex(t => t.id === id);\n  if (testimonialIndex !== -1) {\n    testimonials[testimonialIndex] = { \n        ...testimonials[testimonialIndex], \n        ...values,\n        avatar: values.avatar || \"https://placehold.co/100x100.png\",\n    };\n    console.log(`Testimonial ID ${id} updated.`);\n  } else {\n    console.warn(`updateTestimonialAction: Testimonial with ID ${id} not found.`);\n    throw new Error(`Testimonial with ID ${id} not found for update.`);\n  }\n\n  revalidatePath(\"/admin/testimonials\");\n  revalidatePath(`/admin/testimonials/edit/${id}`);\n  revalidatePath(\"/\"); \n  revalidatePath(\"/admin\");\n  redirect(\"/admin/testimonials\");\n}\n\nexport async function deleteTestimonialAction(id: string) {\n  console.log(`Deleting testimonial ${id} (simulated in-memory)`);\n  const testimonialIndex = testimonials.findIndex(t => t.id === id);\n  if (testimonialIndex !== -1) {\n    testimonials.splice(testimonialIndex, 1);\n    console.log(`Testimonial ID ${id} deleted. Remaining testimonials:`, testimonials.length);\n  } else {\n    console.warn(`deleteTestimonialAction: Testimonial with ID ${id} not found.`);\n  }\n\n  revalidatePath(\"/admin/testimonials\");\n  revalidatePath(\"/\"); \n  revalidatePath(\"/admin\");\n}\n\n// Inquiry Actions\nexport async function updateInquiryStatusAction(id: string, status: ClientInquiryStatus) {\n  console.log(`Updating inquiry ${id} to status ${status} (simulated in-memory)`);\n  const inquiryIndex = clientInquiries.findIndex(inq => inq.id === id);\n  if (inquiryIndex !== -1) {\n    clientInquiries[inquiryIndex].status = status;\n    console.log(`Inquiry ID ${id} status updated to ${status}.`);\n  } else {\n    console.warn(`updateInquiryStatusAction: Inquiry with ID ${id} not found.`);\n  }\n  revalidatePath(\"/admin/inquiries\");\n  revalidatePath(\"/admin\"); \n}\n\nexport async function submitQuoteRequestAction(data: QuoteRequestFormValues): Promise<{ success: boolean; error?: string }> {\n  console.log(\"Server action: submitQuoteRequestAction called with data:\", data);\n  \n  try {\n    const newInquiry: ClientInquiry = {\n      id: `inq-${Date.now()}-${Math.random().toString(36).substring(2, 7)}`,\n      name: data.name,\n      email: data.email,\n      company: data.company || undefined,\n      phoneNumber: data.phoneNumber || undefined, // Add phoneNumber\n      serviceRequested: data.service,\n      details: data.projectDetails,\n      date: new Date().toISOString(),\n      status: 'New',\n    };\n    \n    clientInquiries.unshift(newInquiry); \n    \n    console.log(\"New inquiry added to clientInquiries (simulated):\", newInquiry);\n    console.log(\"Current clientInquiries count:\", clientInquiries.length);\n\n    revalidatePath(\"/admin/inquiries\");\n    revalidatePath(\"/admin\");\n    \n    return { success: true };\n  } catch (e) {\n    console.error(\"Error in submitQuoteRequestAction:\", e);\n    const errorMessage = e instanceof Error ? e.message : \"An unexpected error occurred.\";\n    return { success: false, error: `Failed to submit quote request: ${errorMessage}` };\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;IAcsB;IA+BA;IAiBA;IAuBA;IAkBA;IAgBA;IAsBA;IAgBA;IAaA","debugId":null}},
    {"offset": {"line": 329, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/admin/AIQuoteGeneratorClient.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState, useEffect, useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { Button } from \"@/components/ui/button\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Loader2, Wand2 } from \"lucide-react\";\nimport type { GenerateQuoteOutput } from \"@/ai/flows/generate-quote\"; // This is now bilingual\nimport { generateQuoteAction } from \"./actions\"; \nimport { useRouter } from \"next/navigation\";\n\nconst formSchema = z.object({\n  requestDetails: z.string().min(20, {\n    message: \"Please provide at least 20 characters for the request details.\",\n  }),\n});\n\ntype AIQuoteGeneratorFormValues = z.infer<typeof formSchema>;\n\ninterface AIQuoteGeneratorClientProps {\n  inquiryId: string;\n  initialRequestDetails?: string;\n}\n\nexport default function AIQuoteGeneratorClient({ inquiryId, initialRequestDetails = \"\" }: AIQuoteGeneratorClientProps) {\n  const [generatedQuote, setGeneratedQuote] = useState<GenerateQuoteOutput | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { toast } = useToast();\n  const router = useRouter();\n  const generatedQuoteCardRef = useRef<HTMLDivElement>(null);\n\n  const form = useForm<AIQuoteGeneratorFormValues>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      requestDetails: initialRequestDetails,\n    },\n  });\n\n  useEffect(() => {\n    if (generatedQuote && generatedQuoteCardRef.current) {\n      generatedQuoteCardRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"nearest\", // Changed from \"start\" to \"nearest\"\n      });\n    }\n  }, [generatedQuote]);\n\n  async function onSubmit(values: AIQuoteGeneratorFormValues) {\n    setIsLoading(true);\n    setGeneratedQuote(null);\n    try {\n      const result = await generateQuoteAction({ \n        requestDetails: values.requestDetails,\n        inquiryId: inquiryId \n      });\n      setGeneratedQuote(result);\n      toast({\n        title: \"Bilingual Quote Generated!\",\n        description: \"AI has drafted a project scope and estimate in English and Spanish. The inquiry has been updated.\",\n      });\n      router.refresh(); \n    } catch (error) {\n      console.error(\"Error generating quote:\", error);\n      toast({\n        title: \"Error Generating Quote\",\n        description: error instanceof Error ? error.message : \"An unknown error occurred.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <Card className=\"shadow-md\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2 text-xl\">\n            <Wand2 className=\"h-6 w-6 text-accent\" />\n            AI Quote Generator\n          </CardTitle>\n          <CardDescription>\n            Analyze client request details to auto-generate a project scope and cost estimate in English and Spanish. The inquiry will be updated with this quote.\n          </CardDescription>\n        </CardHeader>\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)}>\n            <CardContent className=\"space-y-4\">\n              <FormField\n                control={form.control}\n                name=\"requestDetails\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Client Request Details (for AI Analysis)</FormLabel>\n                    <FormControl>\n                      <Textarea\n                        placeholder=\"Paste or type the client's project request details here...\"\n                        className=\"min-h-[120px] text-sm\"\n                        {...field}\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </CardContent>\n            <CardFooter>\n              <Button type=\"submit\" disabled={isLoading} className=\"bg-accent hover:bg-accent/90 text-accent-foreground\">\n                {isLoading ? (\n                  <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                ) : (\n                  <Wand2 className=\"mr-2 h-4 w-4\" />\n                )}\n                Generate & Save Bilingual Quote\n              </Button>\n            </CardFooter>\n          </form>\n        </Form>\n      </Card>\n\n      {isLoading && (\n        <div className=\"text-center py-4\">\n          <Loader2 className=\"mx-auto h-8 w-8 animate-spin text-primary\" />\n          <p className=\"mt-2 text-muted-foreground\">Generating AI insights (EN/ES)...</p>\n        </div>\n      )}\n\n      {generatedQuote && !isLoading && (\n        <Card ref={generatedQuoteCardRef} className=\"shadow-md bg-secondary/30\">\n          <CardHeader>\n            <CardTitle className=\"text-lg text-primary\">Generated Bilingual Quote Draft (Saved)</CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4 text-sm\">\n            <div>\n              <h4 className=\"font-semibold text-foreground\">Project Scope (English):</h4>\n              <p className=\"whitespace-pre-wrap text-muted-foreground p-2 border rounded-md bg-background\">{generatedQuote.projectScope.en}</p>\n              <h4 className=\"font-semibold text-foreground mt-2\">Alcance del Proyecto (Español):</h4>\n              <p className=\"whitespace-pre-wrap text-muted-foreground p-2 border rounded-md bg-background\">{generatedQuote.projectScope.es}</p>\n            </div>\n            <div>\n              <h4 className=\"font-semibold text-foreground\">Cost Estimate (English):</h4>\n              <p className=\"whitespace-pre-wrap text-muted-foreground p-2 border rounded-md bg-background\">{generatedQuote.costEstimate.en}</p>\n              <h4 className=\"font-semibold text-foreground mt-2\">Estimación de Costo (Español):</h4>\n              <p className=\"whitespace-pre-wrap text-muted-foreground p-2 border rounded-md bg-background\">{generatedQuote.costEstimate.es}</p>\n            </div>\n            <div>\n              <h4 className=\"font-semibold text-foreground\">Additional Notes (English):</h4>\n              <p className=\"whitespace-pre-wrap text-muted-foreground p-2 border rounded-md bg-background\">{generatedQuote.additionalNotes.en}</p>\n              <h4 className=\"font-semibold text-foreground mt-2\">Notas Adicionales (Español):</h4>\n              <p className=\"whitespace-pre-wrap text-muted-foreground p-2 border rounded-md bg-background\">{generatedQuote.additionalNotes.es}</p>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 743, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dropdown-menu.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 941, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/admin/inquiries/InquiryStatusDropdown.tsx"],"sourcesContent":["\n\"use client\";\n\nimport type { ClientInquiryStatus } from \"@/lib/placeholder-data\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Edit, FileText as FileTextIconLucide, CheckCircle, Archive } from \"lucide-react\";\nimport { updateInquiryStatusAction } from \"@/components/admin/actions\";\nimport { useRouter } from \"next/navigation\";\n\ninterface InquiryStatusDropdownProps {\n  inquiryId: string;\n  currentStatus: ClientInquiryStatus;\n  allStatuses: ClientInquiryStatus[];\n}\n\nexport default function InquiryStatusDropdown({\n  inquiryId,\n  currentStatus,\n  allStatuses,\n}: InquiryStatusDropdownProps) {\n  const router = useRouter();\n\n  const handleStatusChange = async (newStatus: ClientInquiryStatus) => {\n    try {\n      await updateInquiryStatusAction(inquiryId, newStatus);\n      router.refresh(); // Refresh data on the page\n    } catch (error) {\n      console.error(\"Failed to update inquiry status:\", error);\n      // Optionally, add a toast notification for errors here\n      // import { useToast } from \"@/hooks/use-toast\";\n      // const { toast } = useToast();\n      // toast({ title: \"Error\", description: \"Failed to update status.\", variant: \"destructive\" });\n    }\n  };\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant=\"ghost\" size=\"icon\" title=\"Change Status\">\n          <Edit className=\"h-4 w-4\" />\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align=\"end\">\n        <DropdownMenuLabel>Change Status</DropdownMenuLabel>\n        <DropdownMenuSeparator />\n        {allStatuses.map((status) => (\n          <DropdownMenuItem\n            key={status}\n            disabled={currentStatus === status}\n            onSelect={() => handleStatusChange(status)} // onSelect now calls a local async handler\n          >\n            {status === 'New' && <FileTextIconLucide className=\"mr-2 h-4 w-4\" />}\n            {status === 'Contacted' && <CheckCircle className=\"mr-2 h-4 w-4 text-blue-500\" />}\n            {status === 'Quoted' && <FileTextIconLucide className=\"mr-2 h-4 w-4 text-yellow-500\" />}\n            {status === 'Closed' && <Archive className=\"mr-2 h-4 w-4 text-red-500\" />}\n            Mark as {status}\n          </DropdownMenuItem>\n        ))}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n"],"names":[],"mappings":";;;;AAIA;AACA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AAdA;;;;;;;AAsBe,SAAS,sBAAsB,EAC5C,SAAS,EACT,aAAa,EACb,WAAW,EACgB;IAC3B,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,qBAAqB,OAAO;QAChC,IAAI;YACF,MAAM,CAAA,GAAA,qIAAA,CAAA,4BAAyB,AAAD,EAAE,WAAW;YAC3C,OAAO,OAAO,IAAI,2BAA2B;QAC/C,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,oCAAoC;QAClD,uDAAuD;QACvD,gDAAgD;QAChD,gCAAgC;QAChC,8FAA8F;QAChG;IACF;IAEA,qBACE,8OAAC,4IAAA,CAAA,eAAY;;0BACX,8OAAC,4IAAA,CAAA,sBAAmB;gBAAC,OAAO;0BAC1B,cAAA,8OAAC,kIAAA,CAAA,SAAM;oBAAC,SAAQ;oBAAQ,MAAK;oBAAO,OAAM;8BACxC,cAAA,8OAAC,2MAAA,CAAA,OAAI;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAGpB,8OAAC,4IAAA,CAAA,sBAAmB;gBAAC,OAAM;;kCACzB,8OAAC,4IAAA,CAAA,oBAAiB;kCAAC;;;;;;kCACnB,8OAAC,4IAAA,CAAA,wBAAqB;;;;;oBACrB,YAAY,GAAG,CAAC,CAAC,uBAChB,8OAAC,4IAAA,CAAA,mBAAgB;4BAEf,UAAU,kBAAkB;4BAC5B,UAAU,IAAM,mBAAmB;;gCAElC,WAAW,uBAAS,8OAAC,8MAAA,CAAA,WAAkB;oCAAC,WAAU;;;;;;gCAClD,WAAW,6BAAe,8OAAC,2NAAA,CAAA,cAAW;oCAAC,WAAU;;;;;;gCACjD,WAAW,0BAAY,8OAAC,8MAAA,CAAA,WAAkB;oCAAC,WAAU;;;;;;gCACrD,WAAW,0BAAY,8OAAC,wMAAA,CAAA,UAAO;oCAAC,WAAU;;;;;;gCAA+B;gCACjE;;2BARJ;;;;;;;;;;;;;;;;;AAcjB","debugId":null}}]
}