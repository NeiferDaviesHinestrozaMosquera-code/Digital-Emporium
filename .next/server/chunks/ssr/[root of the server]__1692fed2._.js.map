{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-quote.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview AI-Powered Quote Generator.\n *\n * - generateQuote - A function that handles the quote generation process.\n * - GenerateQuoteInput - The input type for the generateQuote function.\n * - GenerateQuoteOutput - The return type for the generateQuote function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst GenerateQuoteInputSchema = z.object({\n  requestDetails: z\n    .string()\n    .describe('Detailed description of the client request for digital services, including the type of service, specific requirements, and any relevant background information. This request is in the primary language of the client (e.g., Spanish or English).'),\n});\nexport type GenerateQuoteInput = z.infer<typeof GenerateQuoteInputSchema>;\n\nconst BilingualContentSchema = z.object({\n  en: z.string().describe('The content in English.'),\n  es: z.string().describe('El contenido en Español.'),\n});\n\nconst GenerateQuoteOutputSchema = z.object({\n  projectScope: BilingualContentSchema.describe('A detailed project scope outlining the deliverables, milestones, and timelines, provided in both English and Spanish.'),\n  costEstimate: BilingualContentSchema.describe('An estimated cost range for the project, considering the scope and complexity, provided in both English and Spanish.'),\n  additionalNotes: BilingualContentSchema.describe('Any additional notes or considerations for the quote, such as potential risks or assumptions, provided in both English and Spanish.'),\n});\nexport type GenerateQuoteOutput = z.infer<typeof GenerateQuoteOutputSchema>;\n\nexport async function generateQuote(input: GenerateQuoteInput): Promise<GenerateQuoteOutput> {\n  return generateQuoteFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'generateQuotePrompt',\n  input: {schema: GenerateQuoteInputSchema},\n  output: {schema: GenerateQuoteOutputSchema},\n  prompt: `You are an AI-powered quote generator for digital services. Analyze the client's request and provide a detailed project scope, cost estimate, and any additional notes.\n\nClient Request Details (this is the primary language, please use it as a reference for your response, but generate all outputs in both English and Spanish):\n{{{requestDetails}}}\n\nBased on the request details, generate the following, ensuring EACH field (projectScope, costEstimate, additionalNotes) has distinct content for 'en' (English) and 'es' (Spanish):\n\nFor projectScope:\n  en: [English project scope here]\n  es: [Alcance del proyecto en Español aquí]\n\nFor costEstimate:\n  en: [English cost estimate here]\n  es: [Estimación de costos en Español aquí]\n\nFor additionalNotes:\n  en: [English additional notes here]\n  es: [Notas adicionales en Español aquí]\n`,\n});\n\nconst generateQuoteFlow = ai.defineFlow(\n  {\n    name: 'generateQuoteFlow',\n    inputSchema: GenerateQuoteInputSchema,\n    outputSchema: GenerateQuoteOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    if (!output) {\n        throw new Error(\"AI failed to generate a quote.\");\n    }\n    // Ensure all bilingual fields are present\n    if (!output.projectScope?.en || !output.projectScope?.es ||\n        !output.costEstimate?.en || !output.costEstimate?.es ||\n        !output.additionalNotes?.en || !output.additionalNotes?.es) {\n      console.error(\"AI response missing bilingual fields:\", output);\n      throw new Error(\"AI response is incomplete. Missing bilingual fields for the quote.\");\n    }\n    return output;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,2BAA2B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,gBAAgB,uIAAA,CAAA,IAAC,CACd,MAAM,GACN,QAAQ,CAAC;AACd;AAGA,MAAM,yBAAyB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACtC,IAAI,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACxB,IAAI,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC1B;AAEA,MAAM,4BAA4B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACzC,cAAc,uBAAuB,QAAQ,CAAC;IAC9C,cAAc,uBAAuB,QAAQ,CAAC;IAC9C,iBAAiB,uBAAuB,QAAQ,CAAC;AACnD;AAGO,eAAe,uCAAW,GAAX,cAAc,KAAyB;IAC3D,OAAO,kBAAkB;AAC3B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAwB;IACxC,QAAQ;QAAC,QAAQ;IAAyB;IAC1C,QAAQ,CAAC;;;;;;;;;;;;;;;;;;AAkBX,CAAC;AACD;AAEA,MAAM,oBAAoB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACrC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,IAAI,CAAC,QAAQ;QACT,MAAM,IAAI,MAAM;IACpB;IACA,0CAA0C;IAC1C,IAAI,CAAC,OAAO,YAAY,EAAE,MAAM,CAAC,OAAO,YAAY,EAAE,MAClD,CAAC,OAAO,YAAY,EAAE,MAAM,CAAC,OAAO,YAAY,EAAE,MAClD,CAAC,OAAO,eAAe,EAAE,MAAM,CAAC,OAAO,eAAe,EAAE,IAAI;QAC9D,QAAQ,KAAK,CAAC,yCAAyC;QACvD,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;;;IAhDoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 333, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase/config.ts"],"sourcesContent":["\n// Import the functions you need from the SDKs you need\nimport { initializeApp, getApps, type FirebaseApp } from \"firebase/app\";\nimport { getAuth, type Auth } from \"firebase/auth\";\nimport { getDatabase, type Database } from \"firebase/database\";\nimport { getAnalytics, type Analytics } from \"firebase/analytics\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC1crLmQlkC0iflC4_AXdErat0UP3UsRxs\",\n  authDomain: \"digital-emporium-48495.firebaseapp.com\",\n  projectId: \"digital-emporium-48495\",\n  storageBucket: \"digital-emporium-48495.appspot.com\", // Comúnmente .appspot.com, verifica si el tuyo es .firebasestorage.app\n  messagingSenderId: \"362093800760\",\n  appId: \"1:362093800760:web:31b14864efe28c2b43e5cd\",\n  measurementId: \"G-6GPTJ0813F\",\n  // Asegúrate de que esta URL coincida con la de tu Realtime Database en la consola de Firebase.\n  // Formato común para us-central1: https://[PROJECT_ID]-default-rtdb.firebaseio.com\n  // O para otras regiones: https://[PROJECT_ID]-default-rtdb.[REGION].firebasedatabase.app\n  databaseURL: \"https://digital-emporium-48495-default-rtdb.firebaseio.com\",\n};\n\n// Initialize Firebase\nlet app: FirebaseApp;\nif (!getApps().length) {\n  app = initializeApp(firebaseConfig);\n} else {\n  app = getApps()[0];\n}\n\nlet analytics: Analytics | undefined;\nconst auth: Auth = getAuth(app);\nconst db: Database = getDatabase(app); // Asegúrate de que la base de datos se inicializa aquí\n\nif (typeof window !== 'undefined') {\n  // Firebase Analytics solo en el cliente\n  if (app.name && typeof window !== \"undefined\") {\n    analytics = getAnalytics(app);\n  }\n}\n\nexport { app, auth, db, analytics };\n"],"names":[],"mappings":"AACA,uDAAuD;;;;;;;AACvD;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;AAEA,wCAAwC;AACxC,MAAM,iBAAiB;IACrB,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;IACP,eAAe;IACf,+FAA+F;IAC/F,mFAAmF;IACnF,yFAAyF;IACzF,aAAa;AACf;AAEA,sBAAsB;AACtB,IAAI;AACJ,IAAI,CAAC,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,EAAE;IACrB,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;AACtB,OAAO;IACL,MAAM,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,GAAG,CAAC,EAAE;AACpB;AAEA,IAAI;AACJ,MAAM,OAAa,CAAA,GAAA,yOAAA,CAAA,UAAO,AAAD,EAAE;AAC3B,MAAM,KAAe,CAAA,GAAA,qLAAA,CAAA,cAAW,AAAD,EAAE,MAAM,uDAAuD;AAE9F,uCAAmC;;AAKnC","debugId":null}},
    {"offset": {"line": 385, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/admin/actions.ts"],"sourcesContent":["\n\"use server\";\n\nimport { generateQuote, type GenerateQuoteInput, type GenerateQuoteOutput } from \"@/ai/flows/generate-quote\";\nimport type { ClientInquiryStatus, ClientInquiry, Service, Testimonial, Project } from \"@/lib/placeholder-data\";\nimport type { ServiceFormValues, TestimonialFormValues, QuoteRequestFormValues, ProjectFormValues } from \"@/lib/schemas\";\nimport { revalidatePath } from \"next/cache\";\nimport { redirect } from \"next/navigation\";\nimport { db } from \"@/lib/firebase/config\";\nimport { ref, set, get, child, update, remove, push } from \"firebase/database\";\n\ninterface GenerateQuoteActionInputForServer extends GenerateQuoteInput {\n  inquiryId: string;\n}\n\n// AI Quote Generation\nexport async function generateQuoteAction(input: GenerateQuoteActionInputForServer): Promise<GenerateQuoteOutput> {\n  try {\n    const result = await generateQuote({ requestDetails: input.requestDetails });\n    \n    const inquiryRef = ref(db, `inquiries/${input.inquiryId}`);\n    await update(inquiryRef, {\n      generatedQuote: result,\n      status: 'Quoted' \n    });\n    \n    revalidatePath(\"/admin/inquiries\"); // Revalidate non-localized path\n    revalidatePath(\"/admin\"); \n    return result;\n  } catch (error) {\n    console.error(\"Error in generateQuoteAction with Firebase:\", error);\n    if (error instanceof Error) {\n        throw new Error(`AI Quote Generation Failed: ${error.message}`);\n    }\n    throw new Error(\"An unexpected error occurred during AI quote generation.\");\n  }\n}\n\n// Service Actions\nexport async function createServiceAction(values: ServiceFormValues) {\n  try {\n    const newServiceRef = push(ref(db, 'services'));\n    const newServiceId = newServiceRef.key;\n    if (!newServiceId) throw new Error(\"Failed to generate service ID from Firebase.\");\n\n    const newService: Omit<Service, 'id'> = { \n      ...values,\n      image: values.image || \"https://placehold.co/600x400.png\",\n    };\n    await set(ref(db, `services/${newServiceId}`), newService);\n    \n    revalidatePath(\"/admin/services\");\n    revalidatePath(\"/services\"); \n    revalidatePath(\"/\"); \n    revalidatePath(\"/admin\"); \n  } catch (error: any) {\n    console.error(\"Error creating service in Firebase:\", error);\n    if (typeof error.digest === 'string' && error.digest.startsWith('NEXT_REDIRECT')) throw error;\n    throw new Error(error.message || \"Failed to create service in Firebase.\");\n  }\n  redirect(\"/admin/services\"); // Middleware will handle locale prefixing\n}\n\nexport async function updateServiceAction(id: string, values: ServiceFormValues) {\n  try {\n    const serviceToUpdate: Omit<Service, 'id'> = {\n      ...values,\n      image: values.image || \"https://placehold.co/600x400.png\",\n    };\n    await set(ref(db, `services/${id}`), serviceToUpdate);\n\n    revalidatePath(\"/admin/services\");\n    revalidatePath(`/admin/services/edit/${id}`);\n    revalidatePath(\"/services\"); \n    revalidatePath(\"/\"); \n    revalidatePath(\"/admin\");\n  } catch (error: any) {\n    console.error(`Error updating service ${id} in Firebase:`, error);\n    if (typeof error.digest === 'string' && error.digest.startsWith('NEXT_REDIRECT')) throw error;\n    throw new Error(error.message || `Failed to update service ${id} in Firebase.`);\n  }\n  redirect(\"/admin/services\");\n}\n\nexport async function deleteServiceAction(id: string) {\n  try {\n    await remove(ref(db, `services/${id}`));\n    \n    revalidatePath(\"/admin/services\");\n    revalidatePath(\"/services\"); \n    revalidatePath(\"/\"); \n    revalidatePath(\"/admin\");\n  } catch (error) {\n    console.error(`Error deleting service ${id} from Firebase:`, error);\n    throw new Error(error instanceof Error ? error.message : `Failed to delete service ${id} from Firebase.`);\n  }\n}\n\n// Testimonial Actions\nexport async function createTestimonialAction(values: TestimonialFormValues) {\n  try {\n    const newTestimonialRef = push(ref(db, 'testimonials'));\n    const newTestimonialId = newTestimonialRef.key;\n    if (!newTestimonialId) throw new Error(\"Failed to generate testimonial ID from Firebase.\");\n\n    const newTestimonial: Omit<Testimonial, 'id'> = {\n      ...values,\n      avatar: values.avatar || \"https://placehold.co/100x100.png\",\n    };\n    await set(ref(db, `testimonials/${newTestimonialId}`), newTestimonial);\n\n    revalidatePath(\"/admin/testimonials\");\n    revalidatePath(\"/\"); \n    revalidatePath(\"/admin\");\n  } catch (error: any) {\n    console.error(\"Error creating testimonial in Firebase:\", error);\n    if (typeof error.digest === 'string' && error.digest.startsWith('NEXT_REDIRECT')) throw error;\n    throw new Error(error.message || \"Failed to create testimonial in Firebase.\");\n  }\n  redirect(\"/admin/testimonials\");\n}\n\nexport async function updateTestimonialAction(id: string, values: TestimonialFormValues) {\n  try {\n    const testimonialToUpdate: Omit<Testimonial, 'id'> = {\n        ...values,\n        avatar: values.avatar || \"https://placehold.co/100x100.png\",\n    };\n    await set(ref(db, `testimonials/${id}`), testimonialToUpdate);\n\n    revalidatePath(\"/admin/testimonials\");\n    revalidatePath(`/admin/testimonials/edit/${id}`);\n    revalidatePath(\"/\"); \n    revalidatePath(\"/admin\");\n  } catch (error: any) {\n    console.error(`Error updating testimonial ${id} in Firebase:`, error);\n    if (typeof error.digest === 'string' && error.digest.startsWith('NEXT_REDIRECT')) throw error;\n    throw new Error(error.message || `Failed to update testimonial ${id} in Firebase.`);\n  }\n  redirect(\"/admin/testimonials\");\n}\n\nexport async function deleteTestimonialAction(id: string) {\n  try {\n    await remove(ref(db, `testimonials/${id}`));\n    \n    revalidatePath(\"/admin/testimonials\");\n    revalidatePath(\"/\"); \n    revalidatePath(\"/admin\");\n  } catch (error) {\n     console.error(`Error deleting testimonial ${id} from Firebase:`, error);\n    throw new Error(error instanceof Error ? error.message : `Failed to delete testimonial ${id} from Firebase.`);\n  }\n}\n\n// Project Actions\nexport async function createProjectAction(values: ProjectFormValues) {\n  try {\n    const newProjectRef = push(ref(db, 'projects'));\n    const newProjectId = newProjectRef.key;\n    if (!newProjectId) throw new Error(\"Failed to generate project ID from Firebase.\");\n    \n    const newProject: Omit<Project, 'id'> = {\n      ...values,\n      technologies: values.technologies.split(',').map(tech => tech.trim()).filter(tech => tech.length > 0),\n      image: values.image || \"https://placehold.co/600x400.png\",\n    };\n    await set(ref(db, `projects/${newProjectId}`), newProject);\n    \n    revalidatePath(\"/admin/projects\");\n    revalidatePath(\"/projects\");\n    revalidatePath(\"/admin\"); \n  } catch (error: any) {\n    console.error(\"Error creating project in Firebase:\", error);\n    if (typeof error.digest === 'string' && error.digest.startsWith('NEXT_REDIRECT')) throw error;\n    throw new Error(error.message || \"Failed to create project in Firebase.\");\n  }\n  redirect(\"/admin/projects\");\n}\n\nexport async function updateProjectAction(id: string, values: ProjectFormValues) {\n  try {\n    const projectToUpdate: Omit<Project, 'id'> = {\n      ...values,\n      technologies: values.technologies.split(',').map(tech => tech.trim()).filter(tech => tech.length > 0),\n      image: values.image || \"https://placehold.co/600x400.png\",\n    };\n    await set(ref(db, `projects/${id}`), projectToUpdate);\n\n    revalidatePath(\"/admin/projects\");\n    revalidatePath(`/admin/projects/edit/${id}`);\n    revalidatePath(\"/projects\");\n    revalidatePath(\"/admin\");\n  } catch (error: any) {\n    console.error(`Error updating project ${id} in Firebase:`, error);\n    if (typeof error.digest === 'string' && error.digest.startsWith('NEXT_REDIRECT')) throw error;\n    throw new Error(error.message || `Failed to update project ${id} in Firebase.`);\n  }\n  redirect(\"/admin/projects\");\n}\n\nexport async function deleteProjectAction(id: string) {\n  try {\n    await remove(ref(db, `projects/${id}`));\n    \n    revalidatePath(\"/admin/projects\");\n    revalidatePath(\"/projects\");\n    revalidatePath(\"/admin\");\n  } catch (error) {\n    console.error(`Error deleting project ${id} from Firebase:`, error);\n    throw new Error(error instanceof Error ? error.message : `Failed to delete project ${id} from Firebase.`);\n  }\n}\n\n// Inquiry Actions\nexport async function updateInquiryStatusAction(id: string, status: ClientInquiryStatus) {\n  try {\n    await update(ref(db, `inquiries/${id}`), { status: status });\n    revalidatePath(\"/admin/inquiries\");\n    revalidatePath(\"/admin\"); \n  } catch (error) {\n    console.error(`Error updating inquiry status for ${id} in Firebase:`, error);\n     throw new Error(error instanceof Error ? error.message : `Failed to update inquiry ${id} in Firebase.`);\n  }\n}\n\nexport async function submitQuoteRequestAction(data: QuoteRequestFormValues): Promise<{ success: boolean; error?: string; newInquiryId?: string }> {\n  try {\n    const newInquiryRef = push(ref(db, 'inquiries'));\n    const newInquiryId = newInquiryRef.key;\n    if (!newInquiryId) throw new Error(\"Failed to generate inquiry ID from Firebase.\");\n\n    const newInquiryData: Omit<ClientInquiry, 'id'> = {\n      name: data.name,\n      email: data.email,\n      company: data.company || \"\",\n      phoneNumber: data.phoneNumber || \"\",\n      serviceRequested: data.service,\n      details: data.projectDetails,\n      date: new Date().toISOString(),\n      status: 'New',\n    };\n    \n    await set(ref(db, `inquiries/${newInquiryId}`), newInquiryData);\n\n    revalidatePath(\"/admin/inquiries\"); \n    revalidatePath(\"/admin\"); \n    \n    return { success: true, newInquiryId: newInquiryId };\n  } catch (e) {\n    console.error(\"Error in submitQuoteRequestAction with Firebase:\", e);\n    const errorMessage = e instanceof Error ? e.message : \"An unexpected error occurred.\";\n    return { success: false, error: `Failed to submit quote request: ${errorMessage}` };\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 665, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 767, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/forms/QuoteRequestForm.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/forms/QuoteRequestForm.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/forms/QuoteRequestForm.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6S,GAC1U,2EACA","debugId":null}},
    {"offset": {"line": 781, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/forms/QuoteRequestForm.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/forms/QuoteRequestForm.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/forms/QuoteRequestForm.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyR,GACtT,uDACA","debugId":null}},
    {"offset": {"line": 795, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 805, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%5Blang%5D/quote-request/page.tsx"],"sourcesContent":["\nimport QuoteRequestForm from '@/components/forms/QuoteRequestForm';\nimport type { Metadata } from 'next';\nimport type { Service } from '@/lib/placeholder-data';\nimport { db } from \"@/lib/firebase/config\";\nimport { ref, get, child } from \"firebase/database\";\nimport { getDictionary } from '@/lib/i18n/get-dictionary';\nimport type { Locale } from '@/lib/i18n/i18n-config';\n\nexport async function generateMetadata({ params }: { params: { lang: Locale } }): Promise<Metadata> {\n  const dictionary = await getDictionary(params.lang);\n  return {\n    title: dictionary.requestQuotePageTitle as string,\n    description: dictionary.requestQuotePageDescription as string,\n  };\n}\n\nasync function getServicesForDropdown(): Promise<Service[]> {\n  try {\n    const dbRef = ref(db);\n    const snapshot = await get(child(dbRef, `services`));\n    if (snapshot.exists()) {\n      const servicesObject = snapshot.val();\n      const servicesArray = Object.keys(servicesObject)\n        .map(key => ({ id: key, ...servicesObject[key] }))\n        .sort((a, b) => a.title.localeCompare(b.title));\n      return servicesArray as Service[];\n    } else {\n      return [];\n    }\n  } catch (error) {\n    console.error(\"Error fetching services for quote form from Firebase DB:\", error);\n    return []; \n  }\n}\n\n\nexport default async function QuoteRequestPage({ params: { lang } }: { params: { lang: Locale } }) {\n  const services = await getServicesForDropdown();\n  const dictionary = await getDictionary(lang);\n\n  return (\n    <div className=\"container mx-auto px-4 py-12 md:py-16\">\n      <div className=\"text-center mb-12 md:mb-16\">\n        <h1 className=\"text-4xl md:text-5xl font-bold text-primary mb-4\">\n          {/* Potentially translate \"Request a Custom Quote\" */}\n          Request a Custom Quote\n        </h1>\n        <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n          {/* Potentially translate this description */}\n          Have a specific project in mind? Fill out the form below with your requirements, and our team will get back to you with a personalized quote and consultation.\n        </p>\n      </div>\n      <QuoteRequestForm availableServices={services} lang={lang} />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AACA;AAGA;AACA;AAAA;AACA;;;;;;AAGO,eAAe,iBAAiB,EAAE,MAAM,EAAgC;IAC7E,MAAM,aAAa,MAAM,CAAA,GAAA,uIAAA,CAAA,gBAAa,AAAD,EAAE,OAAO,IAAI;IAClD,OAAO;QACL,OAAO,WAAW,qBAAqB;QACvC,aAAa,WAAW,2BAA2B;IACrD;AACF;AAEA,eAAe;IACb,IAAI;QACF,MAAM,QAAQ,CAAA,GAAA,qLAAA,CAAA,MAAG,AAAD,EAAE,gIAAA,CAAA,KAAE;QACpB,MAAM,WAAW,MAAM,CAAA,GAAA,qLAAA,CAAA,MAAG,AAAD,EAAE,CAAA,GAAA,qLAAA,CAAA,QAAK,AAAD,EAAE,OAAO,CAAC,QAAQ,CAAC;QAClD,IAAI,SAAS,MAAM,IAAI;YACrB,MAAM,iBAAiB,SAAS,GAAG;YACnC,MAAM,gBAAgB,OAAO,IAAI,CAAC,gBAC/B,GAAG,CAAC,CAAA,MAAO,CAAC;oBAAE,IAAI;oBAAK,GAAG,cAAc,CAAC,IAAI;gBAAC,CAAC,GAC/C,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,KAAK,CAAC,aAAa,CAAC,EAAE,KAAK;YAC/C,OAAO;QACT,OAAO;YACL,OAAO,EAAE;QACX;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4DAA4D;QAC1E,OAAO,EAAE;IACX;AACF;AAGe,eAAe,iBAAiB,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAgC;IAC/F,MAAM,WAAW,MAAM;IACvB,MAAM,aAAa,MAAM,CAAA,GAAA,uIAAA,CAAA,gBAAa,AAAD,EAAE;IAEvC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAC0C;;;;;;kCAGxD,8OAAC;wBAAE,WAAU;kCACmC;;;;;;;;;;;;0BAIlD,8OAAC,+IAAA,CAAA,UAAgB;gBAAC,mBAAmB;gBAAU,MAAM;;;;;;;;;;;;AAG3D","debugId":null}}]
}