{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/avatar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Avatar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Avatar() from the server but Avatar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx <module evaluation>\",\n    \"Avatar\",\n);\nexport const AvatarFallback = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarFallback() from the server but AvatarFallback is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx <module evaluation>\",\n    \"AvatarFallback\",\n);\nexport const AvatarImage = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarImage() from the server but AvatarImage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx <module evaluation>\",\n    \"AvatarImage\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,8DACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,8DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8DACA","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/avatar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Avatar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Avatar() from the server but Avatar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx\",\n    \"Avatar\",\n);\nexport const AvatarFallback = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarFallback() from the server but AvatarFallback is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx\",\n    \"AvatarFallback\",\n);\nexport const AvatarImage = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarImage() from the server but AvatarImage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx\",\n    \"AvatarImage\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,0CACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,0CACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0CACA","debugId":null}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 350, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 371, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-quote.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview AI-Powered Quote Generator.\n *\n * - generateQuote - A function that handles the quote generation process.\n * - GenerateQuoteInput - The input type for the generateQuote function.\n * - GenerateQuoteOutput - The return type for the generateQuote function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst GenerateQuoteInputSchema = z.object({\n  requestDetails: z\n    .string()\n    .describe('Detailed description of the client request for digital services, including the type of service, specific requirements, and any relevant background information. This request is in the primary language of the client (e.g., Spanish or English).'),\n});\nexport type GenerateQuoteInput = z.infer<typeof GenerateQuoteInputSchema>;\n\nconst BilingualContentSchema = z.object({\n  en: z.string().describe('The content in English.'),\n  es: z.string().describe('El contenido en Espa√±ol.'),\n});\n\nconst GenerateQuoteOutputSchema = z.object({\n  projectScope: BilingualContentSchema.describe('A detailed project scope outlining the deliverables, milestones, and timelines, provided in both English and Spanish.'),\n  costEstimate: BilingualContentSchema.describe('An estimated cost range for the project, considering the scope and complexity, provided in both English and Spanish.'),\n  additionalNotes: BilingualContentSchema.describe('Any additional notes or considerations for the quote, such as potential risks or assumptions, provided in both English and Spanish.'),\n});\nexport type GenerateQuoteOutput = z.infer<typeof GenerateQuoteOutputSchema>;\n\nexport async function generateQuote(input: GenerateQuoteInput): Promise<GenerateQuoteOutput> {\n  return generateQuoteFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'generateQuotePrompt',\n  input: {schema: GenerateQuoteInputSchema},\n  output: {schema: GenerateQuoteOutputSchema},\n  prompt: `You are an AI-powered quote generator for digital services. Analyze the client's request and provide a detailed project scope, cost estimate, and any additional notes.\n\nClient Request Details (this is the primary language, please use it as a reference for your response, but generate all outputs in both English and Spanish):\n{{{requestDetails}}}\n\nBased on the request details, generate the following, ensuring EACH field (projectScope, costEstimate, additionalNotes) has distinct content for 'en' (English) and 'es' (Spanish):\n\nFor projectScope:\n  en: [English project scope here]\n  es: [Alcance del proyecto en Espa√±ol aqu√≠]\n\nFor costEstimate:\n  en: [English cost estimate here]\n  es: [Estimaci√≥n de costos en Espa√±ol aqu√≠]\n\nFor additionalNotes:\n  en: [English additional notes here]\n  es: [Notas adicionales en Espa√±ol aqu√≠]\n`,\n});\n\nconst generateQuoteFlow = ai.defineFlow(\n  {\n    name: 'generateQuoteFlow',\n    inputSchema: GenerateQuoteInputSchema,\n    outputSchema: GenerateQuoteOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    if (!output) {\n        throw new Error(\"AI failed to generate a quote.\");\n    }\n    // Ensure all bilingual fields are present\n    if (!output.projectScope?.en || !output.projectScope?.es ||\n        !output.costEstimate?.en || !output.costEstimate?.es ||\n        !output.additionalNotes?.en || !output.additionalNotes?.es) {\n      console.error(\"AI response missing bilingual fields:\", output);\n      throw new Error(\"AI response is incomplete. Missing bilingual fields for the quote.\");\n    }\n    return output;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,2BAA2B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,gBAAgB,uIAAA,CAAA,IAAC,CACd,MAAM,GACN,QAAQ,CAAC;AACd;AAGA,MAAM,yBAAyB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACtC,IAAI,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACxB,IAAI,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC1B;AAEA,MAAM,4BAA4B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACzC,cAAc,uBAAuB,QAAQ,CAAC;IAC9C,cAAc,uBAAuB,QAAQ,CAAC;IAC9C,iBAAiB,uBAAuB,QAAQ,CAAC;AACnD;AAGO,eAAe,uCAAW,GAAX,cAAc,KAAyB;IAC3D,OAAO,kBAAkB;AAC3B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAwB;IACxC,QAAQ;QAAC,QAAQ;IAAyB;IAC1C,QAAQ,CAAC;;;;;;;;;;;;;;;;;;AAkBX,CAAC;AACD;AAEA,MAAM,oBAAoB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACrC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,IAAI,CAAC,QAAQ;QACT,MAAM,IAAI,MAAM;IACpB;IACA,0CAA0C;IAC1C,IAAI,CAAC,OAAO,YAAY,EAAE,MAAM,CAAC,OAAO,YAAY,EAAE,MAClD,CAAC,OAAO,YAAY,EAAE,MAAM,CAAC,OAAO,YAAY,EAAE,MAClD,CAAC,OAAO,eAAe,EAAE,MAAM,CAAC,OAAO,eAAe,EAAE,IAAI;QAC9D,QAAQ,KAAK,CAAC,yCAAyC;QACvD,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;;;IAhDoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 468, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase/config.ts"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp, getApps, type FirebaseApp } from \"firebase/app\";\nimport { getAuth, type Auth } from \"firebase/auth\";\nimport { getDatabase, type Database } from \"firebase/database\"; // Added\nimport { getAnalytics, type Analytics } from \"firebase/analytics\";\n\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n// IMPORTANT: For production, it's highly recommended to use environment variables\n// (e.g., process.env.NEXT_PUBLIC_FIREBASE_API_KEY) rather than hardcoding credentials.\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY || \"AIzaSyC1crLmQlkC0iflC4_AXdErat0UP3UsRxs\",\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN || \"digital-emporium-48495.firebaseapp.com\",\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID || \"digital-emporium-48495\",\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET || \"digital-emporium-48495.appspot.com\",\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID || \"362093800760\",\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID || \"1:362093800760:web:31b14864efe28c2b43e5cd\",\n  measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID || \"G-6GPTJ0813F\",\n  databaseURL: process.env.NEXT_PUBLIC_FIREBASE_DATABASE_URL || \"https://digital-emporium-48495-default-rtdb.firebaseio.com\",\n};\n\n// Initialize Firebase\nlet app: FirebaseApp;\nif (!getApps().length) {\n  app = initializeApp(firebaseConfig);\n} else {\n  app = getApps()[0];\n}\n\nlet analytics: Analytics | undefined;\nconst auth: Auth = getAuth(app);\nconst db: Database = getDatabase(app); // Initialize Realtime Database\n\nif (typeof window !== 'undefined') {\n  // This check ensures Firebase Analytics is only initialized on the client-side.\n  if (app.name && typeof window !== \"undefined\") {\n    analytics = getAnalytics(app);\n  }\n}\n\nexport { app, auth, db, analytics }; // Export db\n"],"names":[],"mappings":"AAAA,uDAAuD;;;;;;;AACvD;AAAA;AACA;AAAA;AACA,wTAAgE,QAAQ;AAAxE;AACA;;;;;AAGA,wCAAwC;AACxC,mEAAmE;AACnE,kFAAkF;AAClF,uFAAuF;AACvF,MAAM,iBAAiB;IACrB,QAAQ,QAAQ,GAAG,CAAC,4BAA4B,IAAI;IACpD,YAAY,QAAQ,GAAG,CAAC,gCAAgC,IAAI;IAC5D,WAAW,QAAQ,GAAG,CAAC,+BAA+B,IAAI;IAC1D,eAAe,QAAQ,GAAG,CAAC,mCAAmC,IAAI;IAClE,mBAAmB,QAAQ,GAAG,CAAC,wCAAwC,IAAI;IAC3E,OAAO,QAAQ,GAAG,CAAC,2BAA2B,IAAI;IAClD,eAAe,QAAQ,GAAG,CAAC,mCAAmC,IAAI;IAClE,aAAa,QAAQ,GAAG,CAAC,iCAAiC,IAAI;AAChE;AAEA,sBAAsB;AACtB,IAAI;AACJ,IAAI,CAAC,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,EAAE;IACrB,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;AACtB,OAAO;IACL,MAAM,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,GAAG,CAAC,EAAE;AACpB;AAEA,IAAI;AACJ,MAAM,OAAa,CAAA,GAAA,yOAAA,CAAA,UAAO,AAAD,EAAE;AAC3B,MAAM,KAAe,CAAA,GAAA,qLAAA,CAAA,cAAW,AAAD,EAAE,MAAM,+BAA+B;AAEtE,uCAAmC;;AAKnC;;CAEqC,YAAY","debugId":null}},
    {"offset": {"line": 521, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/admin/actions.ts"],"sourcesContent":["\n\"use server\";\n\nimport { generateQuote, type GenerateQuoteInput, type GenerateQuoteOutput } from \"@/ai/flows/generate-quote\";\nimport type { ClientInquiryStatus, ClientInquiry, Service, Testimonial, Project } from \"@/lib/placeholder-data\";\nimport type { ServiceFormValues, TestimonialFormValues, QuoteRequestFormValues, ProjectFormValues } from \"@/lib/schemas\";\nimport { revalidatePath } from \"next/cache\";\nimport { redirect } from \"next/navigation\";\nimport { db } from \"@/lib/firebase/config\";\nimport { ref, set, get, child, update, remove, push } from \"firebase/database\";\n\ninterface GenerateQuoteActionInputForServer extends GenerateQuoteInput {\n  inquiryId: string;\n}\n\n// AI Quote Generation\nexport async function generateQuoteAction(input: GenerateQuoteActionInputForServer): Promise<GenerateQuoteOutput> {\n  console.log(\"Server action: generateQuoteAction called with input for Firebase:\", input);\n  try {\n    const result = await generateQuote({ requestDetails: input.requestDetails });\n    \n    const inquiryRef = ref(db, `inquiries/${input.inquiryId}`);\n    await update(inquiryRef, {\n      generatedQuote: result,\n      status: 'Quoted' // Automatically mark as Quoted\n    });\n    console.log(`Generated bilingual quote added and status updated in Firebase for inquiry ID ${input.inquiryId}`);\n\n    revalidatePath(\"/admin/inquiries\");\n    revalidatePath(\"/admin\"); \n    return result;\n  } catch (error) {\n    console.error(\"Error in generateQuoteAction with Firebase:\", error);\n    if (error instanceof Error) {\n        throw new Error(`AI Quote Generation Failed: ${error.message}`);\n    }\n    throw new Error(\"An unexpected error occurred during AI quote generation.\");\n  }\n}\n\n// Service Actions\nexport async function createServiceAction(values: ServiceFormValues) {\n  try {\n    const newServiceRef = push(ref(db, 'services'));\n    const newServiceId = newServiceRef.key;\n    if (!newServiceId) throw new Error(\"Failed to generate service ID from Firebase.\");\n\n    const newService: Omit<Service, 'id'> = { // Firebase key will be the ID\n      ...values,\n      image: values.image || \"https://placehold.co/600x400.png\",\n    };\n    await set(ref(db, `services/${newServiceId}`), newService);\n    console.log(\"New service added to Firebase DB:\", newServiceId);\n    \n    revalidatePath(\"/admin/services\");\n    revalidatePath(\"/services\"); \n    revalidatePath(\"/\"); \n    revalidatePath(\"/admin\"); \n  } catch (error: any) {\n    console.error(\"Error creating service in Firebase:\", error);\n    if (typeof error.digest === 'string' && error.digest.startsWith('NEXT_REDIRECT')) throw error;\n    throw new Error(error.message || \"Failed to create service in Firebase.\");\n  }\n  redirect(\"/admin/services\");\n}\n\nexport async function updateServiceAction(id: string, values: ServiceFormValues) {\n  try {\n    const serviceToUpdate: Omit<Service, 'id'> = {\n      ...values,\n      image: values.image || \"https://placehold.co/600x400.png\",\n    };\n    await set(ref(db, `services/${id}`), serviceToUpdate);\n    console.log(`Service ${id} updated in Firebase DB.`);\n\n    revalidatePath(\"/admin/services\");\n    revalidatePath(`/admin/services/edit/${id}`);\n    revalidatePath(\"/services\"); \n    revalidatePath(\"/\"); \n    revalidatePath(\"/admin\");\n  } catch (error: any) {\n    console.error(`Error updating service ${id} in Firebase:`, error);\n    if (typeof error.digest === 'string' && error.digest.startsWith('NEXT_REDIRECT')) throw error;\n    throw new Error(error.message || `Failed to update service ${id} in Firebase.`);\n  }\n  redirect(\"/admin/services\");\n}\n\nexport async function deleteServiceAction(id: string) {\n  try {\n    await remove(ref(db, `services/${id}`));\n    console.log(`Service ${id} deleted from Firebase DB.`);\n    \n    revalidatePath(\"/admin/services\");\n    revalidatePath(\"/services\"); \n    revalidatePath(\"/\"); \n    revalidatePath(\"/admin\");\n  } catch (error) {\n    console.error(`Error deleting service ${id} from Firebase:`, error);\n    throw new Error(error instanceof Error ? error.message : `Failed to delete service ${id} from Firebase.`);\n  }\n}\n\n// Testimonial Actions\nexport async function createTestimonialAction(values: TestimonialFormValues) {\n  try {\n    const newTestimonialRef = push(ref(db, 'testimonials'));\n    const newTestimonialId = newTestimonialRef.key;\n    if (!newTestimonialId) throw new Error(\"Failed to generate testimonial ID from Firebase.\");\n\n    const newTestimonial: Omit<Testimonial, 'id'> = {\n      ...values,\n      avatar: values.avatar || \"https://placehold.co/100x100.png\",\n    };\n    await set(ref(db, `testimonials/${newTestimonialId}`), newTestimonial);\n    console.log(\"New testimonial added to Firebase DB:\", newTestimonialId);\n\n    revalidatePath(\"/admin/testimonials\");\n    revalidatePath(\"/\"); \n    revalidatePath(\"/admin\");\n  } catch (error: any) {\n    console.error(\"Error creating testimonial in Firebase:\", error);\n    if (typeof error.digest === 'string' && error.digest.startsWith('NEXT_REDIRECT')) throw error;\n    throw new Error(error.message || \"Failed to create testimonial in Firebase.\");\n  }\n  redirect(\"/admin/testimonials\");\n}\n\nexport async function updateTestimonialAction(id: string, values: TestimonialFormValues) {\n  try {\n    const testimonialToUpdate: Omit<Testimonial, 'id'> = {\n        ...values,\n        avatar: values.avatar || \"https://placehold.co/100x100.png\",\n    };\n    await set(ref(db, `testimonials/${id}`), testimonialToUpdate);\n    console.log(`Testimonial ${id} updated in Firebase DB.`);\n\n    revalidatePath(\"/admin/testimonials\");\n    revalidatePath(`/admin/testimonials/edit/${id}`);\n    revalidatePath(\"/\"); \n    revalidatePath(\"/admin\");\n  } catch (error: any) {\n    console.error(`Error updating testimonial ${id} in Firebase:`, error);\n    if (typeof error.digest === 'string' && error.digest.startsWith('NEXT_REDIRECT')) throw error;\n    throw new Error(error.message || `Failed to update testimonial ${id} in Firebase.`);\n  }\n  redirect(\"/admin/testimonials\");\n}\n\nexport async function deleteTestimonialAction(id: string) {\n  try {\n    await remove(ref(db, `testimonials/${id}`));\n    console.log(`Testimonial ${id} deleted from Firebase DB.`);\n    \n    revalidatePath(\"/admin/testimonials\");\n    revalidatePath(\"/\"); \n    revalidatePath(\"/admin\");\n  } catch (error) {\n     console.error(`Error deleting testimonial ${id} from Firebase:`, error);\n    throw new Error(error instanceof Error ? error.message : `Failed to delete testimonial ${id} from Firebase.`);\n  }\n}\n\n// Project Actions\nexport async function createProjectAction(values: ProjectFormValues) {\n  try {\n    const newProjectRef = push(ref(db, 'projects'));\n    const newProjectId = newProjectRef.key;\n    if (!newProjectId) throw new Error(\"Failed to generate project ID from Firebase.\");\n    \n    const newProject: Omit<Project, 'id'> = {\n      ...values,\n      technologies: values.technologies.split(',').map(tech => tech.trim()).filter(tech => tech.length > 0),\n      image: values.image || \"https://placehold.co/600x400.png\",\n    };\n    await set(ref(db, `projects/${newProjectId}`), newProject);\n    console.log(\"New project added to Firebase DB:\", newProjectId);\n    \n    revalidatePath(\"/admin/projects\");\n    revalidatePath(\"/projects\");\n    revalidatePath(\"/admin\"); \n  } catch (error: any) {\n    console.error(\"Error creating project in Firebase:\", error);\n    if (typeof error.digest === 'string' && error.digest.startsWith('NEXT_REDIRECT')) throw error;\n    throw new Error(error.message || \"Failed to create project in Firebase.\");\n  }\n  redirect(\"/admin/projects\");\n}\n\nexport async function updateProjectAction(id: string, values: ProjectFormValues) {\n  try {\n    const projectToUpdate: Omit<Project, 'id'> = {\n      ...values,\n      technologies: values.technologies.split(',').map(tech => tech.trim()).filter(tech => tech.length > 0),\n      image: values.image || \"https://placehold.co/600x400.png\",\n    };\n    await set(ref(db, `projects/${id}`), projectToUpdate);\n    console.log(`Project ${id} updated in Firebase DB.`);\n\n    revalidatePath(\"/admin/projects\");\n    revalidatePath(`/admin/projects/edit/${id}`);\n    revalidatePath(\"/projects\");\n    revalidatePath(\"/admin\");\n  } catch (error: any) {\n    console.error(`Error updating project ${id} in Firebase:`, error);\n    if (typeof error.digest === 'string' && error.digest.startsWith('NEXT_REDIRECT')) throw error;\n    throw new Error(error.message || `Failed to update project ${id} in Firebase.`);\n  }\n  redirect(\"/admin/projects\");\n}\n\nexport async function deleteProjectAction(id: string) {\n  try {\n    await remove(ref(db, `projects/${id}`));\n    console.log(`Project ${id} deleted from Firebase DB.`);\n    \n    revalidatePath(\"/admin/projects\");\n    revalidatePath(\"/projects\");\n    revalidatePath(\"/admin\");\n  } catch (error) {\n    console.error(`Error deleting project ${id} from Firebase:`, error);\n    throw new Error(error instanceof Error ? error.message : `Failed to delete project ${id} from Firebase.`);\n  }\n}\n\n// Inquiry Actions\nexport async function updateInquiryStatusAction(id: string, status: ClientInquiryStatus) {\n  try {\n    await update(ref(db, `inquiries/${id}`), { status: status });\n    console.log(`Inquiry ID ${id} status updated to ${status} in Firebase.`);\n    revalidatePath(\"/admin/inquiries\");\n    revalidatePath(\"/admin\"); \n  } catch (error) {\n    console.error(`Error updating inquiry status for ${id} in Firebase:`, error);\n     throw new Error(error instanceof Error ? error.message : `Failed to update inquiry ${id} in Firebase.`);\n  }\n}\n\nexport async function submitQuoteRequestAction(data: QuoteRequestFormValues): Promise<{ success: boolean; error?: string; newInquiryId?: string }> {\n  try {\n    const newInquiryRef = push(ref(db, 'inquiries'));\n    const newInquiryId = newInquiryRef.key;\n    if (!newInquiryId) throw new Error(\"Failed to generate inquiry ID from Firebase.\");\n\n    const newInquiryData: Omit<ClientInquiry, 'id'> = {\n      name: data.name,\n      email: data.email,\n      company: data.company || \"\",\n      phoneNumber: data.phoneNumber || \"\",\n      serviceRequested: data.service,\n      details: data.projectDetails,\n      date: new Date().toISOString(),\n      status: 'New',\n    };\n    \n    await set(ref(db, `inquiries/${newInquiryId}`), newInquiryData);\n    console.log(\"New inquiry added to Firebase DB:\", newInquiryId);\n\n    revalidatePath(\"/admin/inquiries\"); // For admin panel\n    revalidatePath(\"/admin\"); // For dashboard stats potentially\n    \n    return { success: true, newInquiryId: newInquiryId };\n  } catch (e) {\n    console.error(\"Error in submitQuoteRequestAction with Firebase:\", e);\n    const errorMessage = e instanceof Error ? e.message : \"An unexpected error occurred.\";\n    return { success: false, error: `Failed to submit quote request: ${errorMessage}` };\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 814, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AlertDialog = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialog() from the server but AlertDialog is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx <module evaluation>\",\n    \"AlertDialog\",\n);\nexport const AlertDialogAction = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogAction() from the server but AlertDialogAction is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx <module evaluation>\",\n    \"AlertDialogAction\",\n);\nexport const AlertDialogCancel = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogCancel() from the server but AlertDialogCancel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx <module evaluation>\",\n    \"AlertDialogCancel\",\n);\nexport const AlertDialogContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogContent() from the server but AlertDialogContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx <module evaluation>\",\n    \"AlertDialogContent\",\n);\nexport const AlertDialogDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogDescription() from the server but AlertDialogDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx <module evaluation>\",\n    \"AlertDialogDescription\",\n);\nexport const AlertDialogFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogFooter() from the server but AlertDialogFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx <module evaluation>\",\n    \"AlertDialogFooter\",\n);\nexport const AlertDialogHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogHeader() from the server but AlertDialogHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx <module evaluation>\",\n    \"AlertDialogHeader\",\n);\nexport const AlertDialogOverlay = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogOverlay() from the server but AlertDialogOverlay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx <module evaluation>\",\n    \"AlertDialogOverlay\",\n);\nexport const AlertDialogPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogPortal() from the server but AlertDialogPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx <module evaluation>\",\n    \"AlertDialogPortal\",\n);\nexport const AlertDialogTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogTitle() from the server but AlertDialogTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx <module evaluation>\",\n    \"AlertDialogTitle\",\n);\nexport const AlertDialogTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogTrigger() from the server but AlertDialogTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx <module evaluation>\",\n    \"AlertDialogTrigger\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;;AAAA;;AACO,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,oEACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,oEACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,oEACA;AAEG,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,oEACA;AAEG,MAAM,yBAAyB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,oEACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,oEACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,oEACA;AAEG,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,oEACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,oEACA;AAEG,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,oEACA;AAEG,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,oEACA","debugId":null}},
    {"offset": {"line": 868, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AlertDialog = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialog() from the server but AlertDialog is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx\",\n    \"AlertDialog\",\n);\nexport const AlertDialogAction = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogAction() from the server but AlertDialogAction is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx\",\n    \"AlertDialogAction\",\n);\nexport const AlertDialogCancel = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogCancel() from the server but AlertDialogCancel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx\",\n    \"AlertDialogCancel\",\n);\nexport const AlertDialogContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogContent() from the server but AlertDialogContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx\",\n    \"AlertDialogContent\",\n);\nexport const AlertDialogDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogDescription() from the server but AlertDialogDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx\",\n    \"AlertDialogDescription\",\n);\nexport const AlertDialogFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogFooter() from the server but AlertDialogFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx\",\n    \"AlertDialogFooter\",\n);\nexport const AlertDialogHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogHeader() from the server but AlertDialogHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx\",\n    \"AlertDialogHeader\",\n);\nexport const AlertDialogOverlay = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogOverlay() from the server but AlertDialogOverlay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx\",\n    \"AlertDialogOverlay\",\n);\nexport const AlertDialogPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogPortal() from the server but AlertDialogPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx\",\n    \"AlertDialogPortal\",\n);\nexport const AlertDialogTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogTitle() from the server but AlertDialogTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx\",\n    \"AlertDialogTitle\",\n);\nexport const AlertDialogTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call AlertDialogTrigger() from the server but AlertDialogTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/alert-dialog.tsx\",\n    \"AlertDialogTrigger\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;;AAAA;;AACO,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,gDACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,gDACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,gDACA;AAEG,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,gDACA;AAEG,MAAM,yBAAyB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,gDACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,gDACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,gDACA;AAEG,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,gDACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,gDACA;AAEG,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,gDACA;AAEG,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,gDACA","debugId":null}},
    {"offset": {"line": 922, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 932, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/testimonials/page.tsx"],"sourcesContent":["\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport type { Testimonial } from \"@/lib/placeholder-data\";\nimport Link from \"next/link\";\nimport { PlusCircle, Edit, Trash2 } from \"lucide-react\";\nimport { deleteTestimonialAction } from \"@/components/admin/actions\";\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from \"@/components/ui/alert-dialog\";\nimport { db } from \"@/lib/firebase/config\";\nimport { ref, get, child } from \"firebase/database\";\n\nasync function getTestimonialsFromDB(): Promise<Testimonial[]> {\n  try {\n    const dbRef = ref(db);\n    const snapshot = await get(child(dbRef, `testimonials`));\n    if (snapshot.exists()) {\n      const testimonialsObject = snapshot.val();\n      const testimonialsArray = Object.keys(testimonialsObject)\n        .map(key => ({ id: key, ...testimonialsObject[key] }))\n         .sort((a, b) => a.name.localeCompare(b.name)); // Sort by name\n      return testimonialsArray as Testimonial[];\n    } else {\n      return [];\n    }\n  } catch (error) {\n    console.error(\"Error fetching testimonials from Firebase DB:\", error);\n    return [];\n  }\n}\n\nexport default async function AdminTestimonialsPage() {\n  const testimonials = await getTestimonialsFromDB();\n\n  return (\n    <div className=\"space-y-8\">\n      <div className=\"flex items-center justify-between\">\n        <h1 className=\"text-3xl font-bold text-primary\">Manage Testimonials</h1>\n        <Button asChild className=\"bg-primary hover:bg-primary/90 text-primary-foreground\">\n          <Link href=\"/admin/testimonials/new\">\n            <PlusCircle className=\"mr-2 h-5 w-5\" /> Add New Testimonial\n          </Link>\n        </Button>\n      </div>\n\n      {testimonials.length > 0 ? (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {testimonials.map((testimonial) => {\n            const fallbackInitials = testimonial.name.split(' ').map(n => n[0]).join('').toUpperCase();\n            return(\n              <Card key={testimonial.id} className=\"shadow-md\">\n                <CardHeader className=\"flex flex-row items-start gap-4\">\n                  <Avatar className=\"h-12 w-12\">\n                    {testimonial.avatar && <AvatarImage src={testimonial.avatar} alt={testimonial.name} data-ai-hint={testimonial.dataAiHint || 'person image'} />}\n                    <AvatarFallback>{fallbackInitials}</AvatarFallback>\n                  </Avatar>\n                  <div>\n                    <CardTitle className=\"text-lg\">{testimonial.name}</CardTitle>\n                    {testimonial.company && <CardDescription className=\"text-xs\">{testimonial.company}</CardDescription>}\n                  </div>\n                </CardHeader>\n                <CardContent>\n                  <blockquote className=\"italic text-sm text-muted-foreground\">\"{testimonial.quote}\"</blockquote>\n                </CardContent>\n                <CardFooter className=\"flex justify-end gap-2 border-t pt-4\">\n                  <Button variant=\"outline\" size=\"sm\" asChild>\n                    <Link href={`/admin/testimonials/edit/${testimonial.id}`}>\n                      <Edit className=\"h-4 w-4\" />\n                    </Link>\n                  </Button>\n                  <AlertDialog>\n                    <AlertDialogTrigger asChild>\n                      <Button variant=\"destructive\" size=\"sm\">\n                        <Trash2 className=\"h-4 w-4\" />\n                      </Button>\n                    </AlertDialogTrigger>\n                    <AlertDialogContent>\n                      <AlertDialogHeader>\n                        <AlertDialogTitle>Are you sure?</AlertDialogTitle>\n                        <AlertDialogDescription>\n                          This action cannot be undone. This will permanently delete the testimonial from Firebase.\n                        </AlertDialogDescription>\n                      </AlertDialogHeader>\n                      <AlertDialogFooter>\n                        <AlertDialogCancel>Cancel</AlertDialogCancel>\n                        <form action={async () => {\n                          \"use server\";\n                          if (!testimonial.id) return;\n                          await deleteTestimonialAction(testimonial.id);\n                        }}>\n                          <AlertDialogAction type=\"submit\">Delete</AlertDialogAction>\n                        </form>\n                      </AlertDialogFooter>\n                    </AlertDialogContent>\n                  </AlertDialog>\n                </CardFooter>\n              </Card>\n            );\n          })}\n        </div>\n      ) : (\n         <Card>\n          <CardContent className=\"p-6 text-center text-muted-foreground\">\n            No testimonials found. Add your first testimonial!\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1277, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}